var Fe=Object.defineProperty;var $e=(e,i,t)=>i in e?Fe(e,i,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[i]=t;var D=(e,i,t)=>($e(e,typeof i!="symbol"?i+"":i,t),t);import{r as w,o as p,c as f,a as s,b as l,w as k,d as $,e as Q,f as y,t as N,g as b,F as P,h as Se,i as Ee,u as R,j as Pe,B as j,k as Ke,l as Ie,m as L,n as Ce,p as Me,q as Ve,s as Be,v as Ue,x as Oe,y as Ne}from"./vendor.63252558.js";const ze=function(){const i=document.createElement("link").relList;if(i&&i.supports&&i.supports("modulepreload"))return;for(const a of document.querySelectorAll('link[rel="modulepreload"]'))r(a);new MutationObserver(a=>{for(const n of a)if(n.type==="childList")for(const o of n.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&r(o)}).observe(document,{childList:!0,subtree:!0});function t(a){const n={};return a.integrity&&(n.integrity=a.integrity),a.referrerpolicy&&(n.referrerPolicy=a.referrerpolicy),a.crossorigin==="use-credentials"?n.credentials="include":a.crossorigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function r(a){if(a.ep)return;a.ep=!0;const n=t(a);fetch(a.href,n)}};ze();var _e,he,m={GlobalStorage:(_e=class{},D(_e,"store",{addUsers:{amount:0}}),_e),PasswordHashes:(he=class{},D(he,"hashes",{}),he),parseJsonFile:async function(e){return new Promise((i,t)=>{const r=new FileReader;r.onload=a=>{try{return i(JSON.parse(a.target.result))}catch(n){return t(n)}},r.onerror=a=>t(a),r.readAsText(e)})},clearFile:function(){const e=document.querySelector(".formkit-remove-files");e!==void 0&&e.click()},saveTemplateAsFile:(e,i,t)=>{const r=new Blob(t?[i]:[JSON.stringify(i,null,2)],{type:"text/json"}),a=document.createElement("a");a.download=e,a.href=window.URL.createObjectURL(r),a.dataset.downloadurl=["text/json",a.download,a.href].join(":");const n=new MouseEvent("click",{view:window,bubbles:!0,cancelable:!0});a.dispatchEvent(n),a.remove()},copy:function(e){var i=document.createElement("textarea");i.innerHTML=e,document.body.appendChild(i),i.select();var t=document.execCommand("copy");return document.body.removeChild(i),t},setupFormComponentWatcher:(e,i,t)=>{e!==void 0&&"methods"in e&&"watchFormData"in e.methods&&i(t,async(r,a)=>{e.methods.watchFormData(r,a)})},isNumerical:e=>/^\d+$/.test(e),uid:()=>(performance.now().toString(36)+Math.random().toString(36)).replace(/\./g,""),getFormKey:(e,i,t)=>e+"_"+i+"_"+t,getFormValue:function(e,i,t,r){return i[this.getFormKey(e,t,r)]},generateTOTPSecret:function(){const e=new Uint32Array(5),i=[];return self.crypto.getRandomValues(e),e.map(t=>i.push(t.toString(16))),i.join("")},hexToUint8Array:function(e){for(var i=new Uint8Array(Math.ceil(e.length/2)),t=0;t<i.length;t++)i[t]=parseInt(e.substr(t*2,2),16);return i},normalizeZypperPackages:function(e){return e.split(/[ ,]/).filter(i=>i).join(" ")},setFormValue:function(e,i,t,r,a){i[this.getFormKey(e,t,r)]=a}},F=(e,i)=>{for(const[t,r]of i)e[t]=r;return e};const De={},Re={class:"navbar navbar-expand-lg navbar-light fixed-top py-3",id:"mainNav"},Le={class:"container px-4 px-lg-5"},qe=$("ADS-B Receiver \u2708\uFE0F"),He=Q('<button class="navbar-toggler navbar-toggler-right" type="button" data-bs-toggle="collapse" data-bs-target="#navbarResponsive" aria-controls="navbarResponsive" aria-expanded="false" aria-label="Toggle navigation"><span class="navbar-toggler-icon"></span></button><div class="collapse navbar-collapse" id="navbarResponsive"><ul class="navbar-nav ms-auto my-2 my-lg-0"><li class="nav-item"><a class="nav-link" href="#/">Start</a></li><li class="nav-item"><a class="nav-link" href="https://microos.opensuse.org/" target="_blank" rel="noopener noreferrer">MicroOS</a></li><li class="nav-item"><a class="nav-link" href="https://github.com/g7/adsbreceiver/" target="_blank" rel="noopener noreferrer">GitHub</a></li></ul></div>',2);function Ge(e,i){const t=w("router-link");return p(),f("nav",Re,[s("div",Le,[l(t,{class:"navbar-brand",to:"/"},{default:k(()=>[qe]),_:1}),He])])}var We=F(De,[["render",Ge]]);const Je={style:{width:"100% !important"},class:"expandable-comp text-white"},Ye={key:0},Xe={key:0,class:"mb-5"},Ze=s("hr",{class:"divider"},null,-1),Qe=[Ze],je={class:"mt-1"},S={props:{displaysAtBegin:{type:Number,default:0},maxComponents:{type:Number,default:-1},title:String},setup(e){const i=e,t=y(i.displaysAtBegin);return(r,a)=>(p(),f("div",Je,[i.title!==void 0?(p(),f("h4",Ye,N(i.title),1)):b("",!0),(p(!0),f(P,null,Se(t.value,n=>(p(),f("div",{key:n},[Ee(r.$slots,"default",{index:n}),n<t.value?(p(),f("div",Xe,Qe)):b("",!0)]))),128)),s("div",je,[e.maxComponents===-1||e.maxComponents!==-1&&e.maxComponents>t.value?(p(),f("button",{key:0,class:"btn btn-primary mr-5 mb-5",onClick:a[0]||(a[0]=n=>t.value++)}," \xA0\xA0\xA0Add\xA0\xA0\xA0 ")):b("",!0),t.value>=1?(p(),f("button",{key:1,class:"btn btn-danger ml-5 mr-5 mb-5",onClick:a[1]||(a[1]=n=>t.value>=1?t.value--:t.value)}," Remove ")):b("",!0)])]))}},et={key:0,class:"sk-folding-cube"},tt=s("div",{class:"sk-cube1 sk-cube"},null,-1),at=s("div",{class:"sk-cube2 sk-cube"},null,-1),nt=s("div",{class:"sk-cube4 sk-cube"},null,-1),it=s("div",{class:"sk-cube3 sk-cube"},null,-1),ot=[tt,at,nt,it],ve={props:["ignJson","combustionScript"],setup(e){const i=e;var t=y(!1);const r=new ye,a=async function(){n();try{let o=await r.convertToImage(i.ignJson,i.combustionScript);r.downloadImageFile(o)}catch(o){alert(o)}n()},n=function(){document.querySelector("#loadingToggle").click()};return(o,d)=>(p(),f(P,null,[s("button",{class:"btn btn-primary mb-4",style:{width:"100%"},onClick:d[0]||(d[0]=c=>a())}," Convert and Download "),R(t)?(p(),f("div",et,ot)):b("",!0),s("button",{id:"loadingToggle",hidden:"",onClick:d[1]||(d[1]=c=>Pe(t)?t.value=!R(t):t=!R(t))})],64))}};class ye{constructor(){D(this,"images",{zero:{ignFatDirEntry:61536,ignFileOffset:86016},combustion:{ignFatDirEntry:61632,combFatDirEntry:63680,ignFileOffset:15796224,combFileOffset:3244032}});D(this,"alphabet",["Alfa","Bravo","Charlie","Delta","Echo","Foxtrot","Golf","Hotel","India","Juliett","Kilo","Lima","Mike","November","Oscar","Papa","Quebec","Romeo","Sierra","Tango","Uniform","Victor","Whisky","X-ray","Yankee","Zulu","Nico","Ignaz","Robert","Moritz"]);String.prototype.replaceAt=function(i,t){return this.substring(0,i)+t+this.substring(i+t.length)},String.prototype.hexEncode=function(){var i,t,r="";for(t=0;t<this.length;t++)i=this.charCodeAt(t).toString(16),r+=("000"+i).slice(-4);return r}}bufferToHex(i){return[...new Uint8Array(i)].map(t=>t.toString(16).padStart(2,"0")).join("")}strToHex(i){for(var t="",r=0;r<i.length;r++)t+=i.charCodeAt(r).toString(16);return t}async fetchImage(i){return fetch("templates/ignition-"+i+"-template.img").then(t=>t.arrayBuffer())}async convertToImage(i,t){let r=JSON.stringify(i,null,2),a=t===void 0?"zero":"combustion",n=t!==void 0;console.log("images["+a+"] :>> ",this.images[a]);let o=await this.fetchImage(a),d=new DataView(o),c=this.images[a].ignFatDirEntry,h=new DataView(o,c+28,4),_=new TextEncoder,A=_.encode(r),T=h.getInt32(0,!0);if(h.setInt32(0,A.length,!0),A.length>=T)throw new Error(`Warning!

Ignition configuration is too large.

The maximum file size for the Ignition configuration is currently set to `+T+"B.");for(let u=0;u<A.length;u++)d.setInt8(this.images[a].ignFileOffset+u,A[u]);if(console.log("jsonSize(string): "+r.length),console.log("jsonSize(bin): "+A.length),console.log("dirEntry :>> ",c),console.log("images["+a+"] :>> ",this.images[a]),n){let u=this.images[a].combFatDirEntry;h=new DataView(o,u+28,4);let v=_.encode(t),x=h.getInt32(0,!0);if(h.setInt32(0,v.length,!0),v.length>=x)throw new Error(`Warning!

Combustion configuration is too large.

The maximum file size for the Combustion configuration is currently set to `+x+"B.");for(let E=0;E<v.length;E++)d.setInt8(this.images[a].combFileOffset+E,v[E])}var g=new Uint8Array(o);return new Blob([g],{type:"application/octet-stream"})}downloadImageFile(i){var t=window.document.createElement("a");t.href=window.URL.createObjectURL(i),t.download="ignition-"+this.alphabet[Math.floor(Math.random()*this.alphabet.length)].toLowerCase()+".img",document.body.appendChild(t),t.click(),document.body.removeChild(t)}}const K="user",rt={props:["index"],setup:()=>{const e=m.uid(),i=y(!1),t=y("root"),r=y(m.generateTOTPSecret());return{uid:e,totpEnabled:i,name:t,secret:r,Utils:m,formKey:a=>m.getFormKey(K,a,e)}},methods:{encodeToInstallation:function(e,i){const t=(a,n)=>m.getFormValue(K,i,a,n),r=K+"_name_";Object.keys(i).filter(a=>a.includes(r)).map(a=>a.replace(r,"")).forEach(a=>{if(e.passwd="passwd"in e?e.passwd:{users:[]},t("name",a)!=="root"&&(m.GlobalStorage.store.addUsers.onlyUsernameRoot=!1),t("name",a)==="root"&&(e.storage===void 0&&(e.storage={}),e.storage.filesystems===void 0&&(e.storage.filesystems=[]),e.storage.filesystems.push({device:"/dev/disk/by-label/ROOT",format:"btrfs",mountOptions:["subvol=/@/home"],path:"/home",wipeFilesystem:!1})),t("totp_enabled",a)){e.storage===void 0&&(e.storage={}),e.storage.files===void 0&&(e.storage.files=[]);const n=encodeURIComponent("HOTP/T30/6 "+t("name",a)+" - "+t("totp_secret",a));let o;t("name",a)==="root"?o="/root/.pam_oath_usersfile":o="/home/"+t("name",a)+"/.pam_oath_usersfile",e.storage.files.push({overwrite:!0,path:o,contents:{source:"data:,"+n},user:{name:t("name",a)},group:{name:t("name",a)},mode:384})}if(e.passwd.users!==void 0){const n=t("ssh_keys",a),o=n!==void 0&&n.includes(",")?n.replaceAll(" ","").split(","):[n],d=t("passwd",a)===""||t("passwd",a)===void 0;e.passwd.users.push({name:t("name",a),passwordHash:d?void 0:m.PasswordHashes.hashes[a],sshAuthorizedKeys:n===void 0||n===""?void 0:o})}})},watchFormData:async function(e,i){const t=(r,a)=>e[m.getFormKey(K,r,a)];Object.keys(e).filter(r=>r.includes("totp_enabled")).map(r=>r.replace("user_totp_enabled_","")).forEach(async r=>{const a=t("name",r),n=document.getElementById("user_qrcode_"+r),o=t("totp_secret",r);a&&n&&o&&this.renderQRCode(o,a,n)}),Object.keys(e).filter(r=>r.includes("user_passwd")&&!r.includes("hashed")).map(r=>r.replace("user_passwd_","")).forEach(async r=>{const a=t("passwd",r),n=t("hash_type",r),o=a===""||a===void 0,d=e["user_passwd_"+r]===i["user_passwd_"+r];o||d||st(a,n).then(c=>m.PasswordHashes.hashes[r]=c)})},encodeToExport:function(e,i){const t=(a,n)=>m.getFormValue(K,i,a,n),r=K+"_name_";Object.keys(i).filter(a=>a.includes(r)).map(a=>a.replace(r,"")).forEach(a=>{e.login===void 0&&(e.login={}),e.login.users===void 0&&(e.login.users=[]);let n={};n.name=t("name",a),n.hash_type=t("hash_type",a),n.passwd=t("passwd",a),n.ssh_keys=t("ssh_keys",a),n.runs_on_suse=n.name==="root",n.totp_enabled=t("totp_enabled",a),t("totp_enabled",a)&&(n.totp_secret=t("totp_secret",a)),e.login.users.push(n)})},fillImport:function(e,i){const t=(a,n,o)=>m.setFormValue(K,i,a,n,o),r=K+"_name_";e.login==null||e.login.users==null||Object.keys(i).filter(a=>a.includes(r)).map(a=>a.replace(r,"")).forEach(a=>{let n=e.login.users.shift();t("name",a,n.name),t("hash_type",a,n.hash_type),n.passwd&&(t("passwd",a,n.passwd),m.PasswordHashes.hashes[a]=j.hashSync(n.passwd,8)),t("ssh_keys",a,n.ssh_keys),t("runs_on_suse",a,n.runs_on_suse),t("totp_enabled",a,n.totp_enabled),t("totp_secret",a,n.totp_secret)})},countImport:function(e){return e.login!=null&&e.login.users!=null?e.login.users.length:0},totpSecretToBase32:function(e){const i=m.hexToUint8Array(e);return Ke(i,"RFC4648",{padding:!1})},readableTOTPSecret:function(e){return(this.totpSecretToBase32(e).match(/.{1,4}/g)||[]).join(" ")},renderQRCode:function(e,i,t){const r=this.totpSecretToBase32(e);Ie.toCanvas(t,"otpauth://totp/"+i+"?secret="+r+"&issuer=ADSB%20Receiver",function(a){a&&alert(a)})}}};async function st(e,i){if(i==="Hash Yourself")return e;var t=await j.genSalt(10).then();return j.hash(e,t)}const lt={class:"users"},ct={key:0},dt=["id"];function ut(e,i,t,r,a,n){const o=w("FormKit");return p(),f("div",lt,[l(o,{class:"form-control",name:e.formKey("name"),label:"Username (required)",placeholder:"write your os username here",validation:"required","validation-behavior":"live",value:"root",help:"A new user will be created, if it does not exist.",modelValue:e.name,"onUpdate:modelValue":i[0]||(i[0]=d=>e.name=d)},null,8,["name","modelValue"]),l(o,{name:e.formKey("hash_type"),label:"Password Hash Type",placeholder:"bcrypt",type:"select",validation:"optional","validation-behavior":"live",value:"bcrypt",options:["bcrypt","Hash Yourself"],help:"The way you want your password to be hashed."},null,8,["name"]),l(o,{name:e.formKey("passwd"),label:"Password",placeholder:"write the corresponding password here",type:"password",validation:"optional","validation-behavior":"live",help:"Your password is never sent over the internet, everything is local."},null,8,["name"]),l(o,{name:e.formKey("ssh_keys"),label:"SSH Public Keys",placeholder:"write the corresponding ssh keys here, separated by commas, spaces are ignored",type:"textarea",validation:"optional","validation-behavior":"live",help:"Your keys are never sent over the internet, everything is local."},null,8,["name"]),l(o,{name:e.formKey("totp_enabled"),label:"Generate Time-based one-time password (TOTP) Secret",type:"checkbox",validation:"required","validation-behavior":"live ",help:"Enabling Two-Factor Authentication (2FA) via an app based authenticator.",modelValue:e.totpEnabled,"onUpdate:modelValue":i[1]||(i[1]=d=>e.totpEnabled=d)},null,8,["name","modelValue"]),e.totpEnabled===!0?(p(),f("div",ct,[l(o,{name:e.formKey("totp_secret"),type:"text",label:"Time-based one-time password (TOTP) Secret",help:`Your secret (writen to file /${(e.name==="root"?"":"home/")+e.name}/.pam_oath_users) is never sent over the internet. It will be used e.g. with Cockpit and allows a 2fa authentication via an app based authenticator. The following QR-Code defines how the app generates the code:`,modelValue:e.secret,"onUpdate:modelValue":i[2]||(i[2]=d=>e.secret=d)},null,8,["name","help","modelValue"]),s("canvas",{id:e.formKey("qrcode")},null,8,dt),s("p",null,N(n.readableTOTPSecret(e.secret)),1)])):b("",!0)])}var ee=F(rt,[["render",ut]]);const I="create_file",mt={setup:()=>{const e=m.uid();return{sourceType:y("data"),formKey:t=>m.getFormKey(I,t,e)}},methods:{encodeToInstallation:function(e,i){const t=(n,o)=>m.getFormValue(I,i,n,o),r=function(n){return window.btoa(encodeURIComponent(n).replace(/%([0-9A-F]{2})/g,function(d,c){return String.fromCharCode("0x"+c)}))},a=I+"_path_";Object.keys(i).filter(n=>n.includes(a)).map(n=>n.replace("create_file_path_","")).forEach(n=>{e.storage===void 0&&(e.storage={}),e.storage.files===void 0&&(e.storage.files=[]);let o,d={};switch(t("source_type",n)){case"data":let _=t("data_content",n);o="data:text/plain;charset=utf-8;base64,"+r(_===void 0?"":_);break;case"data-vagrant":let A=t("data_vagrant_content",n);o="data:,"+encodeURIComponent(A===void 0?"":A);break;case"https":o=t("https_content",n);break;case"http":o=t("http_content",n);let T=t("http_verification",n);T&&(d.verification={hash:T});break;case"tftp":case"s3":case"gs":o=t("tftp_s3_gs_content",n);break}const c=t("user",n),h=t("group",n);e.storage.files.push(Object.assign({path:t("path",n),mode:parseInt(t("mode",n)),overwrite:t("overwrite",n),user:m.isNumerical(c)?{id:parseInt(c)}:{name:c},group:m.isNumerical(h)?{id:parseInt(h)}:{name:h},contents:{source:o}},d))})},encodeToExport:function(e,i){const t=(a,n)=>m.getFormValue(I,i,a,n),r=I+"_path_";Object.keys(i).filter(a=>a.includes(r)).map(a=>a.replace(r,"")).forEach(a=>{e.storage===void 0&&(e.storage={}),e.storage.files===void 0&&(e.storage.files=[]);let n={};switch(n.source_type=t("source_type",a),n.source_type){case"data":n.data_content=t("data_content",a);break;case"data-vagrant":n.data_vagrant_content=t("data_vagrant_content",a);case"https":n.https_content=t("https_content",a);break;case"http":n.http_content=t("http_content",a),n.http_verification=t("http_verification",a);break;case"tftp":case"s3":case"gs":n.tftp_s3_gs_content=t("tftp_s3_gs_content",a);break}n.path=t("path",a),n.mode=t("mode",a);const o=t("user",a),d=t("group",a);n.user=o,n.group=d,n.overwrite=t("overwrite",a),e.storage.files.push(n)})},fillImport:function(e,i){const t=(a,n,o)=>m.setFormValue(I,i,a,n,o),r=I+"_path_";e.storage==null||e.storage.files==null||Object.keys(i).filter(a=>a.includes(r)).map(a=>a.replace(r,"")).forEach(a=>{let n=e.storage.files.shift();switch(t("source_type",a,n.source_type),n.source_type){case"data":t("data_content",a,n.data_content);break;case"data-vagrant":t("data_vagrant_content",a,n.data_vagrant_content);case"https":t("https_content",a,n.https_content);break;case"http":t("http_content",a,n.http_content),t("http_verification",a,n.http_verification);break;case"tftp":case"s3":case"gs":t("tftp_s3_gs_content",a,n.tftp_s3_gs_content);break}t("path",a,n.path),t("mode",a,n.mode),t("user",a,n.user),t("group",a,n.group),t("overwrite",a,n.overwrite)})},countImport:function(e){return e.storage!=null&&e.storage.files!=null?e.storage.files.length:0}}},pt={class:"createfiles"},ft={class:"source"},_t={key:0,class:"data"},ht={key:1,class:"data-vagrant"},gt={key:2,class:"https"},vt={key:3,class:"http"},yt={key:4,class:"tftp-s3-gs"};function bt(e,i,t,r,a,n){const o=w("FormKit");return p(),f("div",pt,[l(o,{name:e.formKey("path"),label:"File Path (required)",placeholder:"path on the filesystem",validation:"required","validation-behavior":"live",value:"/etc/someconfig",help:"The absolute path to the file"},null,8,["name"]),l(o,{name:e.formKey("overwrite"),label:"Overwrite",placeholder:"path on the filesystem",validation:"required",type:"checkbox","validation-behavior":"live",help:"Whether to delete preexisting nodes at the path"},null,8,["name"]),l(o,{name:e.formKey("mode"),label:"File Mode (required)",type:"number",value:"420",validation:"required","validation-behavior":"live",help:"The file's permission mode. Note that the mode must be properly specified as a decimal value (i.e. 0644 -> 420)."},null,8,["name"]),l(o,{name:e.formKey("user"),label:"User (required)",value:"root",validation:"required","validation-behavior":"live",help:"The file's assigned user. This can either be an ID or the users name"},null,8,["name"]),l(o,{name:e.formKey("group"),label:"Group (required)",value:"root",validation:"required","validation-behavior":"live",help:"The file's assigned group. This can either be an ID or the groups name"},null,8,["name"]),s("div",ft,[l(o,{type:"select",name:e.formKey("source_type"),modelValue:e.sourceType,"onUpdate:modelValue":i[0]||(i[0]=d=>e.sourceType=d),label:"Scheme for file contents url (use data for plain text)",help:"If source is omitted and a regular file already exists at the path, Ignition will do nothing. If source is omitted and no file exists, an empty file will be created.",options:["data","data-vagrant","https","http","tftp","s3","gs","omit"]},null,8,["name","modelValue"])]),e.sourceType==="data"?(p(),f("div",_t,[l(o,{name:e.formKey("data_content"),label:"File Content Data (required)",placeholder:"write the file content here, spaces, newlines etc. are preserved",type:"textarea",validation:"required","validation-behavior":"live",help:"Leaving this empty will create an empty file"},null,8,["name"])])):b("",!0),e.sourceType==="data-vagrant"?(p(),f("div",ht,[l(o,{name:e.formKey("data_vagrant_content"),label:"File Content Data (required)",placeholder:"write the file content here, spaces, newlines etc. are preserved",type:"textarea",validation:"required","validation-behavior":"live",help:"Leaving this empty will create an empty file"},null,8,["name"])])):b("",!0),e.sourceType==="https"?(p(),f("div",gt,[l(o,{name:e.formKey("https_content"),label:"HTTPS Url (required)",placeholder:"the URL of the file contents",type:"text",validation:"required|url","validation-behavior":"live"},null,8,["name"])])):b("",!0),e.sourceType==="http"?(p(),f("div",vt,[l(o,{name:e.formKey("http_content"),label:"HTTP Url (required)",placeholder:"the URL of the file contents",type:"text",validation:"required|url","validation-behavior":"live"},null,8,["name"]),l(o,{name:e.formKey("http_verification"),label:"Verification Hash (optional)",placeholder:"e.g. sha512-012345678..",type:"text",validation:"optional","validation-behavior":"live",help:"The hash of the contents, in the form <type>-<value> where type is either sha512 or sha256."},null,8,["name"])])):b("",!0),!e.sourceType.includes("http")&&e.sourceType!=="data"&&e.sourceType!=="data-vagrant"&&e.sourceType!=="omit"?(p(),f("div",yt,[l(o,{name:e.formKey("tftp_s3_gs_content"),label:e.sourceType.toUpperCase()+" Url (required)",placeholder:"the URL of the file contents",type:"text",validation:"required","validation-behavior":"live"},null,8,["name","label"])])):b("",!0)])}var te=F(mt,[["render",bt]]);const C="add_hostname",At={setup:()=>{const e=m.uid();return{formKey:i=>m.getFormKey(C,i,e)}},methods:{encodeToInstallation:function(e,i){const t=(a,n)=>m.getFormValue(C,i,a,n),r=C+"_hostname_";Object.keys(i).filter(a=>a.includes(r)).map(a=>a.replace(r,"")).forEach(a=>{e.storage===void 0&&(e.storage={}),e.storage.files===void 0&&(e.storage.files=[]);let n=t("hostname",a),o="data:,"+(n===void 0?"":n);e.storage.files.push({path:"/etc/hostname",mode:420,overwrite:!0,contents:{source:o}})})},encodeToExport:function(e,i){const t=(a,n)=>m.getFormValue(C,i,a,n),r=C+"_hostname_";Object.keys(i).filter(a=>a.includes(r)).map(a=>a.replace(r,"")).forEach(a=>{let n=t("hostname",a);e.hostname=n===void 0?"":n})},fillImport:function(e,i){const t=(a,n,o)=>m.setFormValue(C,i,a,n,o),r=C+"_hostname_";Object.keys(i).filter(a=>a.includes(r)).map(a=>a.replace(r,"")).forEach(a=>{e.hostname!=null&&(t("hostname",a,e.hostname),e.hostname=void 0)})},countImport:function(e){return e.hostname!=null?1:0}}};function wt(e,i,t,r,a,n){const o=w("FormKit");return p(),L(o,{name:e.formKey("hostname"),label:"Hostname",validation:"required","validation-behavior":"live",help:"Leaving this empty will create an empty file"},null,8,["name"])}var ae=F(At,[["render",wt]]);const be=new Map([["Arabic","arabic"],["Belgian","be"],["Croatian","hr"],["Canadian (CSA)","ca-multix"],["Chinese Traditional","tw"],["Chinese Simplified","cn"],["Czech","cz"],["Czech (qwerty)","cz-qwerty"],["Danish","dk"],["Dutch","nl"],["Dvorak","us-dvorak"],["Dvorak (programmer)","us-dvp"],["English (US)","us"],["English (UK)","gb"],["Estonian","ee"],["Finnish","fi-kotoistus"],["French","fr"],["French (Canada)","ca"],["French (Switzerland)","ch-fr"],["German","de-nodeadkeys"],["German (with deadkeys)","de"],["German (Switzerland)","sg-latin1"],["Greek","gr"],["Hungarian","hu"],["Icelandic","is"],["Italian","it"],["Japanese","jp"],["Khmer","khmer"],["Korean","kr"],["Lithuanian","lt"],["Norwegian","no"],["Persian","ir"],["Polish","pl"],["Portuguese","pt"],["Portuguese (Brazil)","br"],["Portuguese (Brazil -- US accents)","us-acentos"],["Romanian","ro"],["Russian","ru"],["Serbian","rs-latin"],["Slovak","sk"],["Slovak (qwerty)","sk-qwerty"],["Slovene","si"],["Spanish","es"],["Spanish (Asturian variant)","es-ast"],["Spanish (Latin America)","latam"],["Swedish","se"],["Tajik","tj_alt-UTF8"],["Turkish","tr"],["Ukrainian","ua-utf"],["US International","us-intl"]]),q=new Map([["Afrikaans",new Map([["lang_code","af_ZA"],["utf8",".UTF-8"],["none_utf8",""]])],["Arabic",new Map([["lang_code","ar_EG"],["utf8",".UTF-8"],["none_utf8",""]])],["Asturian",new Map([["lang_code","ast_ES"],["utf8",".UTF-8"],["none_utf8","@euro"]])],["Bengali",new Map([["lang_code","bn_BD"],["utf8",".UTF-8"],["none_utf8",""]])],["Bosnian",new Map([["lang_code","bs_BA"],["utf8",".UTF-8"],["none_utf8",""]])],["Bulgarian",new Map([["lang_code","bg_BG"],["utf8",".UTF-8"],["none_utf8",""]])],["Catalan",new Map([["lang_code","ca_ES"],["utf8",".UTF-8"],["none_utf8","@euro"]])],["Chinese Simplified",new Map([["lang_code","zh_CN"],["utf8",".UTF-8"],["none_utf8",""]])],["Chinese Traditional",new Map([["lang_code","zh_TW"],["utf8",".UTF-8"],["none_utf8",""]])],["Croatian",new Map([["lang_code","hr_HR"],["utf8",".UTF-8"],["none_utf8",""]])],["Czech",new Map([["lang_code","cs_CZ"],["utf8",".UTF-8"],["none_utf8",""]])],["Danish",new Map([["lang_code","da_DK"],["utf8",".UTF-8"],["none_utf8",""]])],["Dutch",new Map([["lang_code","nl_NL"],["utf8",".UTF-8"],["none_utf8","@euro"]])],["English (UK)",new Map([["lang_code","en_GB"],["utf8",".UTF-8"],["none_utf8",""]])],["English (US)",new Map([["lang_code","en_US"],["utf8",".UTF-8"],["none_utf8",""]])],["Estonian",new Map([["lang_code","et_EE"],["utf8",".UTF-8"],["none_utf8",""]])],["Finnish",new Map([["lang_code","fi_FI"],["utf8",".UTF-8"],["none_utf8","@euro"]])],["French",new Map([["lang_code","fr_FR"],["utf8",".UTF-8"],["none_utf8","@euro"]])],["Galician",new Map([["lang_code","gl_ES"],["utf8",".UTF-8"],["none_utf8","@euro"]])],["Georgian",new Map([["lang_code","ka_GE"],["utf8",".UTF-8"],["none_utf8",""]])],["German",new Map([["lang_code","de_DE"],["utf8",".UTF-8"],["none_utf8","@euro"]])],["Greek",new Map([["lang_code","el_GR"],["utf8",".UTF-8"],["none_utf8",".ISO-8859-7"]])],["Gujarati",new Map([["lang_code","gu_IN"],["utf8",".UTF-8"],["none_utf8",""]])],["Hebrew",new Map([["lang_code","he_IL"],["utf8",".UTF-8"],["none_utf8",""]])],["Hindi",new Map([["lang_code","hi_IN"],["utf8",".UTF-8"],["none_utf8",""]])],["Hungarian",new Map([["lang_code","hu_HU"],["utf8",".UTF-8"],["none_utf8",""]])],["Indonesian",new Map([["lang_code","id_ID"],["utf8",".UTF-8"],["none_utf8",""]])],["Italian",new Map([["lang_code","it_IT"],["utf8",".UTF-8"],["none_utf8","@euro"]])],["Japanese",new Map([["lang_code","ja_JP"],["utf8",".UTF-8"],["none_utf8",".eucJP"]])],["Khmer",new Map([["lang_code","km_KH"],["utf8",".UTF-8"],["none_utf8",""]])],["Korean",new Map([["lang_code","ko_KR"],["utf8",".UTF-8"],["none_utf8",""]])],["Lithuanian",new Map([["lang_code","lt_LT"],["utf8",".UTF-8"],["none_utf8",""]])],["Macedonian",new Map([["lang_code","mk_MK"],["utf8",".UTF-8"],["none_utf8",""]])],["Marathi",new Map([["lang_code",""],["utf8",".UTF-8"],["none_utf8",""]])],["Norwegian",new Map([["lang_code","nb_NO"],["utf8",".UTF-8"],["none_utf8",""]])],["Nynorsk",new Map([["lang_code","nn_NO"],["utf8",".UTF-8"],["none_utf8",""]])],["Persian",new Map([["lang_code","fa_IR"],["utf8",".UTF-8"],["none_utf8",""]])],["Polish",new Map([["lang_code","pl_PL"],["utf8",".UTF-8"],["none_utf8",""]])],["Portuguese (Br)",new Map([["lang_code","pt_BR"],["utf8",".UTF-8"],["none_utf8",""]])],["Portuguese",new Map([["lang_code","pt_PT"],["utf8",".UTF-8"],["none_utf8","@euro"]])],["Punjabi",new Map([["lang_code","pa_IN"],["utf8",".UTF-8"],["none_utf8",""]])],["Romanian",new Map([["lang_code","ro_RO"],["utf8",".UTF-8"],["none_utf8",""]])],["Russian",new Map([["lang_code","ru_RU"],["utf8",".UTF-8"],["none_utf8",""]])],["Serbian",new Map([["lang_code","sr_RS"],["utf8",".UTF-8"],["none_utf8",""]])],["Sinhala",new Map([["lang_code","si_LK"],["utf8",".UTF-8"],["none_utf8",""]])],["Slovak",new Map([["lang_code","sk_SK"],["utf8",".UTF-8"],["none_utf8",""]])],["Slovenian",new Map([["lang_code","sl_SI"],["utf8",".UTF-8"],["none_utf8",""]])],["Spanish",new Map([["lang_code","es_ES"],["utf8",".UTF-8"],["none_utf8","@euro"]])],["Swedish",new Map([["lang_code","sv_SE"],["utf8",".UTF-8"],["none_utf8",""]])],["Tajik",new Map([["lang_code","tg_TJ"],["utf8",".UTF-8"],["none_utf8",""]])],["Tamil",new Map([["lang_code","ta_IN"],["utf8",".UTF-8"],["none_utf8",""]])],["Thai",new Map([["lang_code","th_TH"],["utf8",".UTF-8"],["none_utf8",""]])],["Turkish",new Map([["lang_code","tr_TR"],["utf8",".UTF-8"],["none_utf8",""]])],["Ukrainian",new Map([["lang_code","uk_UA"],["utf8",".UTF-8"],["none_utf8",""]])],["Vietnamese",new Map([["lang_code","vi_VN"],["utf8",".UTF-8"],["none_utf8",""]])],["Walloon",new Map([["lang_code","wa_BE"],["utf8",".UTF-8"],["none_utf8","@euro"]])],["Welsh",new Map([["lang_code","cy_GB"],["utf8",".UTF-8"],["none_utf8",""]])],["Xhosa",new Map([["lang_code","xh_ZA"],["utf8",".UTF-8"],["none_utf8",""]])],["Zulu",new Map([["lang_code","zu_ZA"],["utf8",".UTF-8"],["none_utf8",""]])]]);var z={availableLanguages:()=>Array.from(q.entries()).map(e=>e[0]),langCode:e=>q.get(e).get("lang_code"),utf8Encoding:e=>q.get(e).get("utf8"),noneUtf8Encoding:e=>q.get(e).get("none_utf8"),availableKeyboards:()=>Array.from(be.entries()).map(e=>e[0]),keyboardCode:e=>be.get(e)};const M="add_language",kt={setup:()=>{const e=m.uid();return{formKey:i=>m.getFormKey(M,i,e),languages:()=>z.availableLanguages()}},methods:{encodeToInstallation:function(e,i){const t=(a,n)=>m.getFormValue(M,i,a,n),r=M+"_language_name_";Object.keys(i).filter(a=>a.includes(r)).map(a=>a.replace(r,"")).forEach(a=>{const n=t("language_utf8",a),o=t("language_name",a);e.storage===void 0&&(e.storage={}),e.storage.files===void 0&&(e.storage.files=[]);let d=z.langCode(o);n===!0?d=d+z.utf8Encoding(o):d=d+z.noneUtf8Encoding(o);let c="data:,LANG="+d;e.storage.files.push({path:"/etc/locale.conf",mode:420,overwrite:!0,contents:{source:c}})})},encodeToExport:function(e,i){const t=(a,n)=>m.getFormValue(M,i,a,n),r=M+"_language_name_";Object.keys(i).filter(a=>a.includes(r)).map(a=>a.replace(r,"")).forEach(a=>{e.language_name=t("language_name",a),e.language_utf8=t("language_utf8",a)})},fillImport:function(e,i){const t=(a,n,o)=>m.setFormValue(M,i,a,n,o),r=M+"_language_name_";Object.keys(i).filter(a=>a.includes(r)).map(a=>a.replace(r,"")).forEach(a=>{e.language_name!=null&&(t("language_name",a,e.language_name),e.language_name=void 0),e.language_utf8!=null&&t("language_utf8",a,e.language_utf8)})},countImport:function(e){return e.language_name!=null?1:0}}};function Tt(e,i,t,r,a,n){const o=w("FormKit");return p(),f(P,null,[l(o,{type:"select",name:e.formKey("language_name"),label:"Language",validation:"required","validation-behavior":"live",options:e.languages(),help:"select primary language"},null,8,["name","options"]),l(o,{name:e.formKey("language_utf8"),label:"Use UTF-8 Encoding",type:"checkbox","validation-behavior":"live",value:!0,help:"enable UTF8-Code"},null,8,["name"])],64)}var ne=F(kt,[["render",Tt]]);const V="add_network",xt={setup:()=>{const e=m.uid(),i=y("DHCP"),t=y("DHCP"),r=y(!1),a=y(!0),n=y(!0),o=y("WPA & WPA2 Personal");return{ipv4enabled:a,ipv4networkType:i,ipv6enabled:n,ipv6networkType:t,wifienabled:r,keymgmt:o,formKey:d=>m.getFormKey(V,d,e)}},methods:{encodeToInstallation:function(e,i){const t=(o,d)=>m.getFormValue(V,i,o,d),r=function(o){return window.btoa(encodeURIComponent(o).replace(/%([0-9A-F]{2})/g,function(c,h){return String.fromCharCode("0x"+h)}))},a=V+"_interface_";let n=0;Object.keys(i).filter(o=>o.includes(a)).map(o=>o.replace(a,"")).forEach(o=>{e.storage===void 0&&(e.storage={}),e.storage.files===void 0&&(e.storage.files=[]);let d="/etc/NetworkManager/system-connections/",c="";const h=t("wifi_enabled",o),_=t("available_in_initrd",o),A=t("ipv4_enabled",o),T=t("ipv4_auto_dns",o),g=t("ipv6_enabled",o),u=t("ipv6_auto_dns",o),v=t("ipv4_network_type",o)==="DHCP",x=t("ipv6_network_type",o)==="DHCP",E=t("key_mgmt",o),ge=t(h===!0?"wifi_ssid_content":"interface",o);d=d.concat(ge,".nmconnection"),c=c.concat(`
[connection]`,`
`,"id=",ge,`
`,"type=",h===!0?"wifi":"ethernet",`
`,"interface-name=",t("interface",o),`
`),c=c.concat(`
[ipv4]`,`
`,`dns-search=
`),A===!0?(c=c.concat("method=",v===!0?"auto":"manual",`
`),v===!1&&(c=c.concat("address1=",t("ipv4_address",o),"/",t("ipv4_netmask",o)),t("ipv4_gateway",o)!=null&&(c=c.concat(",",t("ipv4_gateway",o))),c=c.concat(`
`)),t("ipv4_dns",o)&&(c=c.concat("dns=",t("ipv4_dns",o),`
`)),T==!1&&(c=c.concat(`ignore_auto_dns=true
`))):c=c.concat("method=disabled",`
`),c=c.concat(`
[ipv6]`,`
`,`dns-search=
`,`addr-gen-mode=eui64
`),g===!0?(c=c.concat("method=",x===!0?"auto":"manual",`
`),x===!1&&(c=c.concat("address1=",t("ipv6_address",o),"/",t("ipv6_netmask",o)),t("ipv6_gateway",o)!=null&&(c=c.concat(",",t("ipv6_gateway",o))),c=c.concat(`
`)),t("ipv6_dns",o)&&(c=c.concat("dns=",t("ipv6_dns",o),`
`)),u==!1&&(c=c.concat(`ignore_auto_dns=true
`))):c=c.concat("method=ignore",`
`),h===!0&&(c=c.concat(`
[wifi]`,`
`,"ssid=",t("wifi_ssid_content",o),`
`),E!=="none"&&(c=c.concat(`
[wifi-security]`,`
`,"key-mgmt=",E==="WPA3 Personal"?"sae":"wpa-psk",`
`,"psk=",t("wifi_password_content",o),`
`))),_?e.combustion_initrd_and_running_system+=`umask 077 # Required for NM config
mkdir -p /etc/NetworkManager/system-connections/
cat >`+d+` <<-EOF
`+c+`EOF

`:e.storage.files.push({path:d,mode:384,overwrite:!0,contents:{source:"data:text/plain;charset=utf-8;base64,"+r(c),human_read:c}}),n==0&&(c=`[main]
# Do not do automatic (DHCP/SLAAC) configuration on ethernet devices
# with no other matching connections.
no-auto-default=*
`,e.storage.files.push({path:"/etc/NetworkManager/conf.d/noauto.conf",mode:420,overwrite:!0,contents:{source:"data:text/plain;charset=utf-8;base64,"+r(c),human_read:c}})),n++})},encodeToExport:function(e,i){const t=(a,n)=>m.getFormValue(V,i,a,n),r=V+"_interface_";Object.keys(i).filter(a=>a.includes(r)).map(a=>a.replace(r,"")).forEach(a=>{e.network===void 0&&(e.network={}),e.network.interfaces===void 0&&(e.network.interfaces=[]);let n={};n.name=t("interface",a),t("wifi_enabled",a)&&(n.wifi={},n.wifi.key_mgmt=t("key_mgmt",a),n.wifi.ssid=t("wifi_ssid_content",a),n.wifi.password=t("wifi_password_content",a)),n.available_in_initrd=t("available_in_initrd",a),t("ipv4_enabled",a)&&(n.ipv4={},n.ipv4.network_type=t("ipv4_network_type",a),n.ipv4.auto_dns_enabled=t("ipv4_auto_dns",a),n.ipv4.dns=t("ipv4_dns",a),n.ipv4.network_type==="fixed IPv4 Address"&&(n.ipv4.address=t("ipv4_address",a),n.ipv4.netmask=t("ipv4_netmask",a),n.ipv4.gateway=t("ipv4_gateway",a))),t("ipv6_enabled",a)&&(n.ipv6={},n.ipv6.network_type=t("ipv6_network_type",a),n.ipv6.auto_dns_enabled=t("ipv6_auto_dns",a),n.ipv6.dns=t("ipv6_dns",a),n.ipv6.network_type==="fixed IPv6 Address"&&(n.ipv6.address=t("ipv6_address",a),n.ipv6.netmask=t("ipv6_netmask",a),n.ipv6.gateway=t("ipv6_gateway",a))),e.network.interfaces.push(n)})},fillImport:function(e,i){const t=(a,n,o)=>m.setFormValue(V,i,a,n,o),r=V+"_interface_";e.network==null||e.network.interfaces==null||Object.keys(i).filter(a=>a.includes(r)).map(a=>a.replace(r,"")).forEach(a=>{let n=e.network.interfaces.shift();t("interface",a,n.name),n.wifi!=null?(t("wifi_enabled",a,!0),t("key_mgmt",a,n.wifi.key_mgmt),t("wifi_ssid_content",a,n.wifi.ssid),t("wifi_password_content",a,n.wifi.password)):t("wifi_enabled",a,!1),n.available_in_initrd!=null&&t("available_in_initrd",a,n.available_in_initrd),n.ipv4!=null?(t("ipv4_enabled",a,!0),t("ipv4_network_type",a,n.ipv4.network_type),t("ipv4_auto_dns",a,n.ipv4.auto_dns_enabled),t("ipv4_dns",a,n.ipv4.dns),n.ipv4.network_type==="fixed IPv4 Address"&&(t("ipv4_address",a,n.ipv4.address),t("ipv4_netmask",a,n.ipv4.netmask),t("ipv4_gateway",a,n.ipv4.gateway))):t("ipv4_enabled",a,!1),n.ipv6!=null?(t("ipv6_enabled",a,!0),t("ipv6_network_type",a,n.ipv6.network_type),t("ipv6_auto_dns",a,n.ipv6.auto_dns_enabled),t("ipv6_dns",a,n.ipv6.dns),n.ipv6.network_type==="fixed IPv6 Address"&&(t("ipv6_address",a,n.ipv6.address),t("ipv6_netmask",a,n.ipv6.netmask),t("ipv6_gateway",a,n.ipv6.gateway))):t("ipv6_enabled",a,!1)})},countImport:function(e){return e.network!=null&&e.network.interfaces!=null?e.network.interfaces.length:0}}},Ft={key:0},$t={class:"container-fluid"},St={class:"row"},Et=s("div",{class:"col-1"},null,-1),Pt={class:"col-12"},Kt={key:0},It={key:1},Ct={class:"container-fluid"},Mt={class:"row"},Vt=s("div",{class:"col-1"},null,-1),Bt={class:"col-12"},Ut={key:0},Ot={key:2},Nt={class:"container-fluid"},zt={class:"row"},Dt=s("div",{class:"col-1"},null,-1),Rt={class:"col-12"},Lt={key:0};function qt(e,i,t,r,a,n){const o=w("FormKit");return p(),f(P,null,[l(o,{name:e.formKey("interface"),label:"Interface Name",type:"text",placeholder:"e.g. eth0, wlan0,... ",validation:"required","validation-visibility":"live",help:" "},null,8,["name"]),l(o,{name:e.formKey("ipv4_enabled"),label:"IPv4 Network enabled",type:"checkbox","validation-behavior":"live",modelValue:e.ipv4enabled,"onUpdate:modelValue":i[0]||(i[0]=d=>e.ipv4enabled=d)},null,8,["name","modelValue"]),e.ipv4enabled===!0?(p(),f("div",Ft,[s("div",$t,[s("div",St,[Et,s("div",Pt,[l(o,{type:"select",name:e.formKey("ipv4_network_type"),modelValue:e.ipv4networkType,"onUpdate:modelValue":i[1]||(i[1]=d=>e.ipv4networkType=d),label:"Network Address via",help:"Select how the network address of the interface will be set/evaluated.",options:["DHCP","fixed IPv4 Address"]},null,8,["name","modelValue"]),e.ipv4networkType==="fixed IPv4 Address"?(p(),f("div",Kt,[l(o,{name:e.formKey("ipv4_address"),label:"IP Address",placeholder:"___.___.___.___",type:"text",validation:[["required"],["matches",/^(([1-9]?\d|[12]\d\d)\.){3}([1-9]?\d|[12]\d\d)$/]],"validation-messages":{matches:"IP number must be in the format xxx.xxx.xxx.xxx"},help:"IPv4 address in the format xxx.xxx.xxx.xxx","validation-visibility":"live"},null,8,["name","validation","validation-messages"]),l(o,{name:e.formKey("ipv4_netmask"),label:"Netmask",type:"number",value:"24",validation:"between:0,32","validation-visibility":"live",help:"Values between 0 and 32"},null,8,["name"]),l(o,{name:e.formKey("ipv4_gateway"),label:"Gateway",placeholder:"___.___.___.___",type:"text",validation:[["matches",/^(([1-9]?\d|[12]\d\d)\.){3}([1-9]?\d|[12]\d\d)$/]],"validation-messages":{matches:"IP number must be in the format xxx.xxx.xxx.xxx"},help:"Gateway address in the format xxx.xxx.xxx.xxx","validation-visibility":"live"},null,8,["name","validation","validation-messages"])])):b("",!0),l(o,{name:e.formKey("ipv4_auto_dns"),label:"Evaluate DNS servers via DHCP",type:"checkbox",value:!0,"validation-behavior":"live",help:"DNS server settings are evalutated automatically."},null,8,["name"]),l(o,{name:e.formKey("ipv4_dns"),label:"DNS servers",type:"text","validation-behavior":"live",help:"Additional DNS servers separated by a semicolon (;)."},null,8,["name"])])])])])):b("",!0),l(o,{name:e.formKey("ipv6_enabled"),label:"IPv6 Network enabled",type:"checkbox","validation-behavior":"live",modelValue:e.ipv6enabled,"onUpdate:modelValue":i[2]||(i[2]=d=>e.ipv6enabled=d)},null,8,["name","modelValue"]),e.ipv6enabled===!0?(p(),f("div",It,[s("div",Ct,[s("div",Mt,[Vt,s("div",Bt,[l(o,{type:"select",name:e.formKey("ipv6_network_type"),modelValue:e.ipv6networkType,"onUpdate:modelValue":i[3]||(i[3]=d=>e.ipv6networkType=d),label:"Network Address via",help:"Select how the network address of the interface will be set/evaluated.",options:["DHCP","fixed IPv6 Address"]},null,8,["name","modelValue"]),e.ipv6networkType==="fixed IPv6 Address"?(p(),f("div",Ut,[l(o,{name:e.formKey("ipv6_address"),label:"IP Address",placeholder:"____:____:____:____:____:____:____:____",type:"text",validation:[["required"],["matches",/^[0-9a-fA-F]{1,4}(:[0-9a-fA-F]{1,4}){7}$/]],"validation-messages":{matches:"IP number must be in the format ____:____:____:____:____:____:____:____"},help:"IPv6 address in the format ____:____:____:____:____:____:____:____","validation-visibility":"live"},null,8,["name","validation"]),l(o,{name:e.formKey("ipv6_netmask"),label:"Netmask",type:"number",value:"64",validation:"between:0,128","validation-visibility":"live",help:"Values between 0 and 128"},null,8,["name"]),l(o,{name:e.formKey("ipv6_gateway"),label:"Gateway",placeholder:"____:____:____:____:____:____:____:____",type:"text",validation:[["matches",/^[0-9a-fA-F]{1,4}(:[0-9a-fA-F]{1,4}){7}$/]],"validation-messages":{matches:"IP number must be in the format ____:____:____:____:____:____:____:____"},help:"Gateway address in the format ____:____:____:____:____:____:____:____","validation-visibility":"live"},null,8,["name","validation"])])):b("",!0),l(o,{name:e.formKey("ipv6_auto_dns"),label:"Evaluate DNS servers via DHCP",type:"checkbox",value:!0,"validation-behavior":"live",help:"DNS server settings are evalutated automatically."},null,8,["name"]),l(o,{name:e.formKey("ipv6_dns"),label:"DNS servers",type:"text","validation-behavior":"live",help:"Additional DNS servers separated by a semicolon (;)."},null,8,["name"])])])])])):b("",!0),l(o,{name:e.formKey("wifi_enabled"),label:"Enable WiFi",type:"checkbox","validation-behavior":"live",modelValue:e.wifienabled,"onUpdate:modelValue":i[4]||(i[4]=d=>e.wifienabled=d),help:"Whether interface will be connected to WiFi."},null,8,["name","modelValue"]),e.wifienabled===!0?(p(),f("div",Ot,[s("div",Nt,[s("div",zt,[Dt,s("div",Rt,[l(o,{name:e.formKey("wifi_ssid_content"),label:"SSID",type:"text",placeholder:"Service Set IDentifier (SSID)",validation:"required","validation-behavior":"live",help:"Uniquely name of a wireless local area network (WLAN)."},null,8,["name"]),l(o,{type:"select",name:e.formKey("key_mgmt"),modelValue:e.keymgmt,"onUpdate:modelValue":i[5]||(i[5]=d=>e.keymgmt=d),label:"Key Management",help:"Key management used for the connection.",options:["none","WPA & WPA2 Personal","WPA3 Personal"],value:"WPA & WPA2 Personal"},null,8,["name","modelValue"]),e.keymgmt!=="none"?(p(),f("div",Lt,[l(o,{name:e.formKey("wifi_password_content"),label:"Password",type:"text",help:"Password required for the WiFi connection."},null,8,["name"])])):b("",!0)])])])])):b("",!0),l(o,{name:e.formKey("available_in_initrd"),label:"Also enabled during installation process",type:"checkbox","validation-behavior":"live",help:"Whether interface will also be available during the installation process."},null,8,["name"])],64)}var ie=F(xt,[["render",qt]]);const B="change_storage",Ht={setup:()=>{const e=m.uid(),i=y("Grow root partition"),t=y(!0),r=y(!0);return{task:i,root_full_size:t,swap_full_size:r,formKey:a=>m.getFormKey(B,a,e)}},methods:{encodeToInstallation:function(e,i){const t=(c,h)=>m.getFormValue(B,i,c,h),r=function(c){return window.btoa(encodeURIComponent(c).replace(/%([0-9A-F]{2})/g,function(_,A){return String.fromCharCode("0x"+A)}))},a=B+"_task_";let n=0,o=!0,d=!1;Object.keys(i).filter(c=>c.includes(a)).map(c=>c.replace(a,"")).forEach(c=>{t("task",c)==="Encrypt disk"&&(d=!0)}),Object.keys(i).filter(c=>c.includes(a)).map(c=>c.replace(a,"")).forEach(c=>{e.storage===void 0&&(e.storage={}),e.storage.files===void 0&&(e.storage.files=[]);let h="/etc/repart.d/",_="";const A=t("task",c);if(A==="Grow root partition"){h=h.concat(n+10,"-root.conf"),_=_.concat(`[Partition]
`,`Type=root
`);const T=t("min_root",c),g=t("max_root",c),u=t("root_full_size",c);T&&!u&&(_=_.concat("SizeMinBytes=",T,`M
`)),g&&!u&&(_=_.concat("SizeMaxBytes=",g,`M
`))}if(A==="Create swap partition if missing"){h=h.concat(n+10,"-swap.conf"),_=_.concat(`[Partition]
`,`Type=swap
`);const T=t("min_swap",c),g=t("max_swap",c),u=t("swap_full_size",c);T&&!u&&(_=_.concat("SizeMinBytes=",T,`M
`)),g&&!u&&(_=_.concat("SizeMaxBytes=",g,`M
`))}if(A==="Apply custom storage changes"){h=h.concat(n+10,"-partition.conf"),_=_.concat(`[Partition]
`);const T=t("type",c);T&&(_=_.concat("Type=",T.split(" ")[0],`
`));const g=t("label",c);g&&(_=_.concat("Label=",g,`
`));const u=t("format",c);u&&u!=="none"&&(_=_.concat("Format=",u,`
`));const v=t("min_disk_space",c),x=t("max_disk_space",c);v&&(_=_.concat("SizeMinBytes=",v,`M
`)),x&&(_=_.concat("SizeMaxBytes=",x,`M
`));const E=t("individuals",c);E&&(_=_.concat(E))}if(A==="Encrypt disk"){e.combustion_initrd+=`  # We set disk-encryption-tool-dracut.encryption credential to
  # "force".  This will make disk-encryption-tool-dracut force the
  # encryption, ignoring that Combusion configured the system, and
  # will skip the permission countdown
  #
  # After the encryption the recovery key is registered in the
  # kernel keyring %user:cryptenroll
  mkdir -p /run/credstore
  echo "force" > /run/credstore/disk-encryption-tool-dracut.encrypt
`;const T=t("password",c),g=t("tpm2_enroll",c),u=t("fido2_enroll",c);e.combustion+=`
# Disk Encryption
#
# Create a valid machine-id, as this will be required to create later
# the host secret
systemd-machine-id-setup
# We want to persist the host secret key created via systemd-cred
# (/var/lib/systemd/credential.secret)
mount /var
mkdir -p /etc/credstore.encrypted
credential="$(mktemp disk-encryption-tool.XXXXXXXXXX)"
# Enroll extra password
echo "`+T+`" > "$credential"
systemd-creds encrypt --name=disk-encryption-tool-enroll.pw "$credential" \\
               /etc/credstore.encrypted/disk-encryption-tool-enroll.pw
`,g&&(e.combustion+=`# Enroll TPM2
echo "1" > "$credential"
systemd-creds encrypt --name=disk-encryption-tool-enroll.tpm2 "$credential" \\
             /etc/credstore.encrypted/disk-encryption-tool-enroll.tpm2
`),u&&(e.combustion+=`# Enroll FIDO2. While firstboot the FIDO key has to be inserted/available.
echo "1" > "$credential"
systemd-creds encrypt --name=disk-encryption-tool-enroll.fido2 "$credential" \\
	      /etc/credstore.encrypted/disk-encryption-tool-enroll.fido2
`),e.combustion+=`shred -u "$credential"
# Umount back /var to not confuse tukit later
umount /var
`}else d?(o&&(o=!1,e.combustion_initrd+=`   mkdir -p /etc/repart.d
`),e.combustion_initrd+='   echo -e "'+_+'" >'+h+`
`):e.storage.files.push({path:h,mode:384,overwrite:!0,contents:{source:"data:text/plain;charset=utf-8;base64,"+r(_),human_read:_}});n++})},encodeToExport:function(e,i){const t=(a,n)=>m.getFormValue(B,i,a,n),r=B+"_task_";Object.keys(i).filter(a=>a.includes(r)).map(a=>a.replace(r,"")).forEach(a=>{e.storage===void 0&&(e.storage={}),e.storage.tasks===void 0&&(e.storage.tasks=[]);const n={};if(n.kind=t("task",a),n.kind==="Encrypt disk"&&(n.password=t("password",a),n.tpm2_enroll=t("tpm2_enroll",a),n.fido2_enroll=t("fido2_enroll",a)),n.kind==="Grow root partition"){const o=t("min_root",a),d=t("max_root",a),c=t("root_full_size",a);n.auto=c,o&&!c&&(n.min=o),d&&!c&&(n.max=d)}if(n.kind==="Create swap partition if missing"){const o=t("min_swap",a),d=t("max_swap",a),c=t("swap_full_size",a);n.auto=c,o&&!c&&(n.min=o),d&&!c&&(n.max=d)}if(n.kind==="Apply custom storage changes"){const o=t("type",a);o&&(n.type=o);const d=t("label",a);d&&(n.label=d);const c=t("format",a);c&&(n.format=c);const h=t("min_disk_space",a),_=t("max_disk_space",a);h&&(n.min=h),_&&(n.max=_);const A=t("individuals",a);A&&(n.individuals=A)}e.storage.tasks.push(n)})},fillImport:function(e,i){const t=(a,n,o)=>m.setFormValue(B,i,a,n,o),r=B+"_task_";e.storage==null||e.storage.tasks==null||Object.keys(i).filter(a=>a.includes(r)).map(a=>a.replace(r,"")).forEach(a=>{let n=e.storage.tasks.shift();n.kind!=null&&t("task",a,n.kind),n.kind==="Grow root partition"&&(n.auto&&t("root_full_size",a,!0),n.auto||(n.min&&t("min_root",a,n.min),n.min&&t("max_root",a,n.max))),n.kind==="Encrypt disk"&&(n.password&&t("password",a,n.password),n.tpm2_enroll&&t("tpm2_enroll",a,!0),n.fido2_enroll&&t("fido2_enroll",a,!0)),n.kind==="Create swap partition if missing"&&(n.auto&&t("swap_full_size",a,!0),n.auto||(n.min&&t("min_swap",a,n.min),n.min&&t("max_swap",a,n.max))),n.kind==="Apply custom storage changes"&&(n.type&&t("type",a,n.type),n.label&&t("label",a,n.label),n.format&&t("format",a,n.format),n.min&&t("min_disk_space",a,n.min),n.min&&t("max_disk_space",a,n.max),n.individuals&&t("individuals",a,n.individuals))})},countImport:function(e){return e.storage!=null&&e.storage.tasks!=null?e.storage.tasks.length:0}}},Gt={key:0},Wt={key:1},Jt={key:0},Yt={class:"row"},Xt=s("div",{class:"col-1"},null,-1),Zt={class:"col-12"},Qt={key:2},jt={key:0},ea={class:"row"},ta=s("div",{class:"col-1"},null,-1),aa={class:"col-12"},na={key:3};function ia(e,i,t,r,a,n){const o=w("FormKit");return p(),f(P,null,[l(o,{name:e.formKey("task"),label:"Task",type:"select",modelValue:e.task,"onUpdate:modelValue":i[0]||(i[0]=d=>e.task=d),options:["Grow root partition","Create swap partition if missing","Encrypt disk","Apply custom storage changes"],validation:"required","validation-visibility":"live",help:"Increasing/Adding partitions/swaps needs free space on the medium. Otherwise it will run into an error while installaiton."},null,8,["name","modelValue"]),e.task==="Encrypt disk"?(p(),f("div",Gt,[l(o,{name:e.formKey("password"),type:"text",label:"Password",placeholder:"Encryption password",validation:"required","validation-visibility":"live",help:" "},null,8,["name"]),l(o,{name:e.formKey("tpm2_enroll"),label:"Add TPM2 (Trusted Platform Module) support",type:"checkbox",help:"Using secure chip with integrated cryptographic keys. An automatic way to decrypt the storage."},null,8,["name"]),l(o,{name:e.formKey("fido2_enroll"),label:"Add FIDO2 (Fast Identity Online) support",type:"checkbox",help:"Using e.g. external USB FIDO2 security key. An automatic way to decrypt the storage. The key has to be inserted/available during the first boot."},null,8,["name"])])):b("",!0),e.task==="Grow root partition"?(p(),f("div",Wt,[l(o,{name:e.formKey("root_full_size"),label:"to the full disk size",type:"checkbox",modelValue:e.root_full_size,"onUpdate:modelValue":i[1]||(i[1]=d=>e.root_full_size=d),help:" "},null,8,["name","modelValue"]),e.root_full_size===!1?(p(),f("div",Jt,[s("div",Yt,[Xt,s("div",Zt,[l(o,{type:"number",name:e.formKey("min_root"),"validation-behavior":"live",label:"Minimum required disk space (MByte)",help:" "},null,8,["name"]),l(o,{type:"number",name:e.formKey("max_root"),"validation-behavior":"live",label:"Maximum required disk space (MByte)",help:" "},null,8,["name"])])])])):b("",!0)])):b("",!0),e.task==="Create swap partition if missing"?(p(),f("div",Qt,[l(o,{name:e.formKey("swap_full_size"),label:"take all available disk space",type:"checkbox",modelValue:e.swap_full_size,"onUpdate:modelValue":i[2]||(i[2]=d=>e.swap_full_size=d),help:" "},null,8,["name","modelValue"]),e.swap_full_size===!1?(p(),f("div",jt,[s("div",ea,[ta,s("div",aa,[l(o,{type:"number",name:e.formKey("min_swap"),"validation-behavior":"live",label:"Minimum required disk space (MByte)",help:" "},null,8,["name"]),l(o,{type:"number",name:e.formKey("max_swap"),"validation-behavior":"live",label:"Maximum required disk space (MByte)",help:" "},null,8,["name"])])])])):b("",!0)])):b("",!0),e.task==="Apply custom storage changes"?(p(),f("div",na,[l(o,{name:e.formKey("type"),label:"Type",type:"select",options:["esp - EFI System Partition","xbootldr - Extended Boot Loader Partition","swap - Swap partition","home - Home (/home/) partition","srv - Server data (/srv/) partition","var - Variable data (/var/) partition","tmp - Temporary data (/var/tmp/) partition","linux-generic - Generic Linux file system partition","root - Root file system partition type appropriate for the local architecture ","root-verity - Verity data for the root file system partition for the local architecture","root-verity-sig - Verity signature data for the root file system partition for the local architecture","root-secondary - Root file system partition of the secondary architecture of the local architecture","root-secondary-verity - Verity data for the root file system partition of the secondary architecture","root-secondary-verity-sig - Verity signature data for the root file system partition of the secondary architecture","root-x86-64 - Root file system partition of the given architecture ","root-ppc - Root file system partition of the given architecture ","root-s390- Root file system partition of the given architecture ","root-s390x - Root file system partition of the given architecture ","root-ia64 - Root file system partition of the given architecture ","root-x86-64-verity - Verity data for the root file system partition of the given architecture","root-ppc-verity - Verity data for the root file system partition of the given architecture","root-s390-verity - Verity data for the root file system partition of the given architecture","root-s390x-verity - Verity data for the root file system partition of the given architecture","root-ia64-verity - Verity data for the root file system partition of the given architecture","root-x86-64-verity-sig - Verity signature data for the root file system partition of the given architecture","root-ppc-verity-sig - Verity signature data for the root file system partition of the given architecture","root-s390-verity-sig - Verity signature data for the root file system partition of the given architecture","root-s390x-verity-sig - Verity signature data for the root file system partition of the given architecture","root-ia64-verity-sig - Verity signature data for the root file system partition of the given architecture","usr - /usr/ file system partition type appropriate for the local architecture","usr-verity - Verity data for the /usr/ file system partition for the local architecture","usr-verity-sig - Verity signature data for the /usr/ file system partition for the local architecture","usr-secondary - /usr/ file system partition of the secondary architecture of the local architecture","usr-secondary-verity - Verity data for the /usr/ file system partition of the secondary architecture","usr-secondary-verity-sid - Verity signature data for the /usr/ file system partition of the secondary architecture","usr-x86-64 - /usr/ file system partition of the given architecture","usr-ppc - /usr/ file system partition of the given architecture","usr-s390 - /usr/ file system partition of the given architecture","usr-s390x - /usr/ file system partition of the given architecture","usr-ia64 - /usr/ file system partition of the given architecture","usr-x86-64-verity - Verity data for the /usr/ file system partition of the given architecture","usr-ppc-verity - Verity data for the /usr/ file system partition of the given architecture","usr-s390-verity - Verity data for the /usr/ file system partition of the given architecture","usr-s390x-verity - Verity data for the /usr/ file system partition of the given architecture","usr-ia64-verity - Verity data for the /usr/ file system partition of the given architecture","usr-x86-64-verity-sig - Verity signature data for the /usr/ file system partition of the given architecture","usr-ppc-verity-sig - Verity signature data for the /usr/ file system partition of the given architecture","usr-s390-verity-sig - Verity signature data for the /usr/ file system partition of the given architecture","usr-s390x-verity-sig - Verity signature data for the /usr/ file system partition of the given architecture","usr-ia64-verity-sig - Verity signature data for the /usr/ file system partition of the given architecture"],validation:"required","validation-visibility":"live",help:"GPT partition type identifiers"},null,8,["name","options"]),l(o,{name:e.formKey("label"),label:"Label",type:"text",help:"The textual label to assign to the partition if none is assigned yet."},null,8,["name"]),l(o,{name:e.formKey("format"),label:"Format",type:"select",options:["none","ext4","btrfs","xfs","vfat","erofs","squashfs","swap"],validation:"required","validation-visibility":"live",help:"If specified and the partition is newly created it is formatted with the specified file system (or as swap device)."},null,8,["name"]),l(o,{type:"number",name:e.formKey("min_disk_space"),label:"Minimum required disk space (MByte)",help:" "},null,8,["name"]),l(o,{type:"number",name:e.formKey("max_disk_space"),label:"Maximum required disk space (MByte)",help:" "},null,8,["name"]),l(o,{name:e.formKey("individuals"),label:"Individual settings",placeholder:`e.g.
Priority=5
Weight=100`,type:"textarea","validation-behavior":"live",help:"defined in https://www.freedesktop.org/software/systemd/man/latest/repart.d.html"},null,8,["name"])])):b("",!0)],64)}var oa=F(Ht,[["render",ia]]);const U="start_service",ra={setup:()=>{const e=m.uid();return{sourceType:y("data"),formKey:t=>m.getFormKey(U,t,e)}},methods:{encodeToInstallation:function(e,i){const t=(a,n)=>m.getFormValue(U,i,a,n),r=U+"_name_";Object.keys(i).filter(a=>a.includes(r)).map(a=>a.replace(r,"")).forEach(a=>{e.systemd="systemd"in e?e.systemd:{units:[]};let n=t("enabled",a),o=n==="omit";e.systemd.units.push({name:t("name",a),enabled:o?void 0:n==="yes",contents:t("contents",a)?t("contents",a):void 0})})},encodeToExport:function(e,i){const t=(a,n)=>m.getFormValue(U,i,a,n),r=U+"_name_";Object.keys(i).filter(a=>a.includes(r)).map(a=>a.replace(r,"")).forEach(a=>{e.systemd===void 0&&(e.systemd={}),e.systemd.units===void 0&&(e.systemd.units=[]);let n={};n.name=t("name",a),n.enabled=t("enabled",a),t("contents",a)&&(n.contents=t("contents",a)),e.systemd.units.push(n)})},fillImport:function(e,i){const t=(a,n,o)=>m.setFormValue(U,i,a,n,o),r=U+"_name_";e.systemd==null||e.systemd.units==null||Object.keys(i).filter(a=>a.includes(r)).map(a=>a.replace(r,"")).forEach(a=>{let n=e.systemd.units.shift();t("name",a,n.name),t("enabled",a,n.enabled),t("contents",a,n.contents)})},countImport:function(e){return e.systemd!=null&&e.systemd.units!=null?e.systemd.units.length:0}}},sa={class:"startservices"};function la(e,i,t,r,a,n){const o=w("FormKit");return p(),f("div",sa,[l(o,{name:e.formKey("name"),label:"Service Name (required)",validation:"required","validation-behavior":"live",value:"example.service",help:"Every unit must have a unique name. This must be suffixed with a valid unit type (e.g. \u201Cthing.service\u201D)."},null,8,["name"]),l(o,{name:e.formKey("enabled"),label:"enabled",value:"yes",validation:"optional",type:"select","validation-behavior":"live",help:"Whether or not the service shall be enabled. When true, the service is enabled. When false, the service is disabled. When omitted, the service is unmodified.",options:["yes","no","omit"]},null,8,["name"]),l(o,{name:e.formKey("contents"),label:"Service Unit Content (optional)",placeholder:"write the service unit content here, spaces, newlines etc. are preserved",type:"textarea",validation:"optional","validation-behavior":"live",help:"The contents of the unit."},null,8,["name"])])}var oe=F(ra,[["render",la]]);const O="modify_service",ca={setup:()=>{const e=m.uid();return{formKey:i=>m.getFormKey(O,i,e)}},methods:{encodeToInstallation:function(e,i){const t=(a,n)=>m.getFormValue(O,i,a,n),r=O+"_name_";Object.keys(i).filter(a=>a.includes(r)).map(a=>a.replace(r,"")).forEach(a=>{e.systemd="systemd"in e?e.systemd:{units:[]};let n=e.systemd.units.find(d=>d.name===t("name",a)),o={name:t("dropin_name",a),contents:t("contents",a)};if(n!==void 0){if(n.dropins!==void 0){n.dropins.push(o);return}n.dropins=[o];return}e.systemd.units.push({name:t("name",a),dropins:[o]})})},encodeToExport:function(e,i){const t=(a,n)=>m.getFormValue(O,i,a,n),r=O+"_name_";Object.keys(i).filter(a=>a.includes(r)).map(a=>a.replace(r,"")).forEach(a=>{e.systemd===void 0&&(e.systemd={}),e.systemd.dropins===void 0&&(e.systemd.dropins=[]);let n={};n.name=t("name",a),n.dropin_name=t("dropin_name",a),n.contents=t("contents",a),e.systemd.dropins.push(n)})},fillImport:function(e,i){const t=(a,n,o)=>m.setFormValue(O,i,a,n,o),r=O+"_name_";e.systemd==null||e.systemd.dropins==null||Object.keys(i).filter(a=>a.includes(r)).map(a=>a.replace(r,"")).forEach(a=>{let n=e.systemd.dropins.shift();t("name",a,n.name),t("dropin_name",a,n.dropin_name),t("contents",a,n.contents)})},countImport:function(e){return e.systemd!=null&&e.systemd.dropins!=null?e.systemd.dropins.length:0}}},da={class:"modifyservice"};function ua(e,i,t,r,a,n){const o=w("FormKit");return p(),f("div",da,[l(o,{name:e.formKey("name"),label:"Name of the service that you want to modify (required)",validation:"required","validation-behavior":"live",value:"example.service",placeholder:"e.g. systemd-journald.service",help:"The name of the unit. This must be suffixed with a valid unit type (e.g. \u201Cthing.service\u201D)."},null,8,["name"]),l(o,{name:e.formKey("dropin_name"),label:"Name of the drop-in file",validation:"required","validation-behavior":"live",value:"debug.conf",help:"The name of the drop-in. This must be suffixed with \u201C.conf\u201D."},null,8,["name"]),l(o,{name:e.formKey("contents"),label:"Drop-In Unit Content (required)",placeholder:"e.g. [Service].. | spaces, newlines etc. are preserved",type:"textarea",validation:"required","validation-behavior":"live",help:"Write the service unit content here, spaces, newlines etc. are preserved."},null,8,["name"])])}var re=F(ca,[["render",ua]]);const se="debug_bytes",ma={setup:()=>{const e=m.uid();return{uid:e,formKey:i=>m.getFormKey(se,i,e)}},methods:{encodeToInstallation:function(e,i){const t=(a,n)=>m.getFormValue(se,i,a,n),r=se+"_size_";Object.keys(i).filter(a=>a.includes(r)).map(a=>a.replace(r,"")).forEach(a=>{var n=new Array(parseInt(t("size",a)-128)+1).join("B");e.debugBytes=e.debugBytes!==void 0?e.debugBytes:[],e.debugBytes.push(n)})}}},pa={class:"users"};function fa(e,i,t,r,a,n){const o=w("FormKit");return p(),f("div",pa,[l(o,{name:e.formKey("size"),label:"Bytes To Add",type:"number",validation:"required","validation-behavior":"live",value:"2048",help:"This is a debug form."},null,8,["name"])])}var le=F(ma,[["render",fa]]);const Ae="debug_analyze",_a={setup:()=>{const e=m.uid();let i=new ye;return console.log(i),{uid:e,formKey:t=>m.getFormKey(Ae,t,e)}},methods:{encodeToInstallation:function(e,i){const t=Ae+"_file_";Object.keys(i).filter(r=>r.includes(t)).map(r=>r.replace(t,"")).forEach(r=>{console.log("--- debug analyze file ---");let a;try{console.log('formData["debug_analyze_file_" + id] :>> ',i["debug_analyze_file_"+r]),a=Object.assign({},i["debug_analyze_file_"+r][0])}catch{}console.log(a),console.log("-----")})}}},ha={class:"analyze"};function ga(e,i,t,r,a,n){const o=w("FormKit");return p(),f("div",ha,[l(o,{name:e.formKey("file"),label:"File To Analyze (Console Log)",type:"file",validation:"required","validation-behavior":"live",help:"This is a debug form."},null,8,["name"])])}var we=F(_a,[["render",ga]]);const H="comb_keyboard",va={setup:()=>{const e=m.uid();return{uid:e,formKey:i=>m.getFormKey(H,i,e),keyboards:()=>z.availableKeyboards()}},methods:{encodeToInstallation:function(e,i){Object.keys(i).filter(t=>t.includes(H)).forEach(t=>{e.combustion+=`
# Keyboard
systemd-firstboot --force --keymap=`+z.keyboardCode(i[t])+`
`})},encodeToExport:function(e,i){Object.keys(i).filter(t=>t.includes(H)).forEach(t=>{e.keyboard=i[t]})},fillImport:function(e,i){e.keyboard!=null&&Object.keys(i).filter(t=>t.includes(H)).forEach(t=>{i[t]=e.keyboard})},countImport:function(e){return e.keyboard!=null?1:0}}};function ya(e,i,t,r,a,n){const o=w("FormKit");return p(),L(o,{type:"select",name:e.formKey("keyboard"),label:"Keyboard",validation:"required","validation-behavior":"live",options:e.keyboards(),help:"select keyboard"},null,8,["name","options"])}var ce=F(va,[["render",ya]]);const ba=new Array("UTC","Africa/Abidjan","Africa/Accra","Africa/Addis_Ababa","Africa/Algiers","Africa/Asmara","Africa/Asmera","Africa/Bamako","Africa/Bangui","Africa/Banjul","Africa/Bissau","Africa/Blantyre","Africa/Brazzaville","Africa/Bujumbura","Africa/Cairo","Africa/Casablanca","Africa/Ceuta","Africa/Conakry","Africa/Dakar","Africa/Dar_es_Salaam","Africa/Djibouti","Africa/Douala","Africa/El_Aaiun","Africa/Freetown","Africa/Gaborone","Africa/Harare","Africa/Johannesburg","Africa/Juba","Africa/Kampala","Africa/Khartoum","Africa/Kigali","Africa/Kinshasa","Africa/Lagos","Africa/Libreville","Africa/Lome","Africa/Luanda","Africa/Lubumbashi","Africa/Lusaka","Africa/Malabo","Africa/Maputo","Africa/Maseru","Africa/Mbabane","Africa/Mogadishu","Africa/Monrovia","Africa/Nairobi","Africa/Ndjamena","Africa/Niamey","Africa/Nouakchott","Africa/Ouagadougou","Africa/Porto-Novo","Africa/Sao_Tome","Africa/Timbuktu","Africa/Tripoli","Africa/Tunis","Africa/Windhoek","America/Adak","America/Anchorage","America/Anguilla","America/Antigua","America/Araguaina","America/Argentina/Buenos_Aires","America/Argentina/Catamarca","America/Argentina/ComodRivadavia","America/Argentina/Cordoba","America/Argentina/Jujuy","America/Argentina/La_Rioja","America/Argentina/Mendoza","America/Argentina/Rio_Gallegos","America/Argentina/Salta","America/Argentina/San_Juan","America/Argentina/San_Luis","America/Argentina/Tucuman","America/Argentina/Ushuaia","America/Aruba","America/Asuncion","America/Atikokan","America/Atka","America/Bahia","America/Bahia_Banderas","America/Barbados","America/Belem","America/Belize","America/Blanc-Sablon","America/Boa_Vista","America/Bogota","America/Boise","America/Buenos_Aires","America/Cambridge_Bay","America/Campo_Grande","America/Cancun","America/Caracas","America/Catamarca","America/Cayenne","America/Cayman","America/Chicago","America/Chihuahua","America/Ciudad_Juarez","America/Coral_Harbour","America/Cordoba","America/Costa_Rica","America/Creston","America/Cuiaba","America/Curacao","America/Danmarkshavn","America/Dawson","America/Dawson_Creek","America/Denver","America/Detroit","America/Dominica","America/Edmonton","America/Eirunepe","America/El_Salvador","America/Ensenada","America/Fort_Nelson","America/Fort_Wayne","America/Fortaleza","America/Glace_Bay","America/Godthab","America/Goose_Bay","America/Grand_Turk","America/Grenada","America/Guadeloupe","America/Guatemala","America/Guayaquil","America/Guyana","America/Halifax","America/Havana","America/Hermosillo","America/Indiana/Indianapolis","America/Indiana/Knox","America/Indiana/Marengo","America/Indiana/Petersburg","America/Indiana/Tell_City","America/Indiana/Vevay","America/Indiana/Vincennes","America/Indiana/Winamac","America/Indianapolis","America/Inuvik","America/Iqaluit","America/Jamaica","America/Jujuy","America/Juneau","America/Kentucky/Louisville","America/Kentucky/Monticello","America/Knox_IN","America/Kralendijk","America/La_Paz","America/Lima","America/Los_Angeles","America/Louisville","America/Lower_Princes","America/Maceio","America/Managua","America/Manaus","America/Marigot","America/Martinique","America/Matamoros","America/Mazatlan","America/Mendoza","America/Menominee","America/Merida","America/Metlakatla","America/Mexico_City","America/Miquelon","America/Moncton","America/Monterrey","America/Montevideo","America/Montreal","America/Montserrat","America/Nassau","America/New_York","America/Nipigon","America/Nome","America/Noronha","America/North_Dakota/Beulah","America/North_Dakota/Center","America/North_Dakota/New_Salem","America/Nuuk","America/Ojinaga","America/Panama","America/Pangnirtung","America/Paramaribo","America/Phoenix","America/Port-au-Prince","America/Port_of_Spain","America/Porto_Acre","America/Porto_Velho","America/Puerto_Rico","America/Punta_Arenas","America/Rainy_River","America/Rankin_Inlet","America/Recife","America/Regina","America/Resolute","America/Rio_Branco","America/Rosario","America/Santa_Isabel","America/Santarem","America/Santiago","America/Santo_Domingo","America/Sao_Paulo","America/Scoresbysund","America/Shiprock","America/Sitka","America/St_Barthelemy","America/St_Johns","America/St_Kitts","America/St_Lucia","America/St_Thomas","America/St_Vincent","America/Swift_Current","America/Tegucigalpa","America/Thule","America/Thunder_Bay","America/Tijuana","America/Toronto","America/Tortola","America/Vancouver","America/Virgin","America/Whitehorse","America/Winnipeg","America/Yakutat","America/Yellowknife","Antarctica/Casey","Antarctica/Davis","Antarctica/DumontDUrville","Antarctica/Macquarie","Antarctica/Mawson","Antarctica/McMurdo","Antarctica/Palmer","Antarctica/Rothera","Antarctica/South_Pole","Antarctica/Syowa","Antarctica/Troll","Antarctica/Vostok","Arctic/Longyearbyen","Asia/Aden","Asia/Almaty","Asia/Amman","Asia/Anadyr","Asia/Aqtau","Asia/Aqtobe","Asia/Ashgabat","Asia/Ashkhabad","Asia/Atyrau","Asia/Baghdad","Asia/Bahrain","Asia/Baku","Asia/Bangkok","Asia/Barnaul","Asia/Beijing","Asia/Beirut","Asia/Bishkek","Asia/Brunei","Asia/Calcutta","Asia/Chita","Asia/Choibalsan","Asia/Chongqing","Asia/Chungking","Asia/Colombo","Asia/Dacca","Asia/Damascus","Asia/Dhaka","Asia/Dili","Asia/Dubai","Asia/Dushanbe","Asia/Famagusta","Asia/Gaza","Asia/Harbin","Asia/Hebron","Asia/Ho_Chi_Minh","Asia/Hong_Kong","Asia/Hovd","Asia/Irkutsk","Asia/Istanbul","Asia/Jakarta","Asia/Jayapura","Asia/Jerusalem","Asia/Kabul","Asia/Kamchatka","Asia/Karachi","Asia/Kashgar","Asia/Kathmandu","Asia/Katmandu","Asia/Khandyga","Asia/Kolkata","Asia/Krasnoyarsk","Asia/Kuala_Lumpur","Asia/Kuching","Asia/Kuwait","Asia/Macao","Asia/Macau","Asia/Magadan","Asia/Makassar","Asia/Manila","Asia/Muscat","Asia/Nicosia","Asia/Novokuznetsk","Asia/Novosibirsk","Asia/Omsk","Asia/Oral","Asia/Phnom_Penh","Asia/Pontianak","Asia/Pyongyang","Asia/Qatar","Asia/Qostanay","Asia/Qyzylorda","Asia/Rangoon","Asia/Riyadh","Asia/Saigon","Asia/Sakhalin","Asia/Samarkand","Asia/Seoul","Asia/Shanghai","Asia/Singapore","Asia/Srednekolymsk","Asia/Taipei","Asia/Tashkent","Asia/Tbilisi","Asia/Tehran","Asia/Tel_Aviv","Asia/Thimbu","Asia/Thimphu","Asia/Tokyo","Asia/Tomsk","Asia/Ujung_Pandang","Asia/Ulaanbaatar","Asia/Ulan_Bator","Asia/Urumqi","Asia/Ust-Nera","Asia/Vientiane","Asia/Vladivostok","Asia/Yakutsk","Asia/Yangon","Asia/Yekaterinburg","Asia/Yerevan","Atlantic/Azores","Atlantic/Bermuda","Atlantic/Canary","Atlantic/Cape_Verde","Atlantic/Faeroe","Atlantic/Faroe","Atlantic/Jan_Mayen","Atlantic/Madeira","Atlantic/Reykjavik","Atlantic/South_Georgia","Atlantic/St_Helena","Atlantic/Stanley","Australia/ACT","Australia/Adelaide","Australia/Brisbane","Australia/Broken_Hill","Australia/Canberra","Australia/Currie","Australia/Darwin","Australia/Eucla","Australia/Hobart","Australia/LHI","Australia/Lindeman","Australia/Lord_Howe","Australia/Melbourne","Australia/NSW","Australia/North","Australia/Perth","Australia/Queensland","Australia/South","Australia/Sydney","Australia/Tasmania","Australia/Victoria","Australia/West","Australia/Yancowinna","Brazil/Acre","Brazil/DeNoronha","Brazil/East","Brazil/West","Canada/Atlantic","Canada/Central","Canada/Eastern","Canada/Mountain","Canada/Newfoundland","Canada/Pacific","Canada/Saskatchewan","Canada/Yukon","Chile/Continental","Chile/EasterIsland","Europe/Amsterdam","Europe/Andorra","Europe/Astrakhan","Europe/Athens","Europe/Belfast","Europe/Belgrade","Europe/Berlin","Europe/Bratislava","Europe/Brussels","Europe/Bucharest","Europe/Budapest","Europe/Busingen","Europe/Chisinau","Europe/Copenhagen","Europe/Dublin","Europe/Gibraltar","Europe/Guernsey","Europe/Helsinki","Europe/Isle_of_Man","Europe/Istanbul","Europe/Jersey","Europe/Kaliningrad","Europe/Kiev","Europe/Kirov","Europe/Kyiv","Europe/Lisbon","Europe/Ljubljana","Europe/London","Europe/Luxembourg","Europe/Madrid","Europe/Malta","Europe/Mariehamn","Europe/Minsk","Europe/Monaco","Europe/Moscow","Europe/Nicosia","Europe/Oslo","Europe/Paris","Europe/Podgorica","Europe/Prague","Europe/Riga","Europe/Rome","Europe/Samara","Europe/San_Marino","Europe/Sarajevo","Europe/Saratov","Europe/Simferopol","Europe/Skopje","Europe/Sofia","Europe/Stockholm","Europe/Tallinn","Europe/Tirane","Europe/Tiraspol","Europe/Ulyanovsk","Europe/Uzhgorod","Europe/Vaduz","Europe/Vatican","Europe/Vienna","Europe/Vilnius","Europe/Volgograd","Europe/Warsaw","Europe/Zagreb","Europe/Zaporozhye","Europe/Zurich","Indian/Antananarivo","Indian/Chagos","Indian/Christmas","Indian/Cocos","Indian/Comoro","Indian/Kerguelen","Indian/Mahe","Indian/Maldives","Indian/Mauritius","Indian/Mayotte","Indian/Reunion","Mexico/BajaNorte","Mexico/BajaSur","Mexico/General","Pacific/Auckland","Pacific/Bougainville","Pacific/Chatham","Pacific/Chuuk","Pacific/Easter","Pacific/Efate","Pacific/Enderbury","Pacific/Fakaofo","Pacific/Fiji","Pacific/Funafuti","Pacific/Galapagos","Pacific/Gambier","Pacific/Guadalcanal","Pacific/Guam","Pacific/Honolulu","Pacific/Johnston","Pacific/Kanton","Pacific/Kiritimati","Pacific/Kosrae","Pacific/Kwajalein","Pacific/Majuro","Pacific/Marquesas","Pacific/Midway","Pacific/Nauru","Pacific/Niue","Pacific/Norfolk","Pacific/Noumea","Pacific/Pago_Pago","Pacific/Palau","Pacific/Pitcairn","Pacific/Pohnpei","Pacific/Ponape","Pacific/Port_Moresby","Pacific/Rarotonga","Pacific/Saipan","Pacific/Samoa","Pacific/Tahiti","Pacific/Tarawa","Pacific/Tongatapu","Pacific/Truk","Pacific/Wake","Pacific/Wallis","Pacific/Yap");var Aa={availableTimezones:()=>ba};const G="comb_timezone",wa={setup:()=>{const e=m.uid();return{uid:e,formKey:i=>m.getFormKey(G,i,e),timezones:()=>Aa.availableTimezones()}},methods:{encodeToInstallation:function(e,i){Object.keys(i).filter(t=>t.includes(G)).forEach(t=>{e.combustion+=`
# Timezone
systemd-firstboot --force --timezone=`+i[t]+`
`})},encodeToExport:function(e,i){Object.keys(i).filter(t=>t.includes(G)).forEach(t=>{e.timezone=i[t]})},fillImport:function(e,i){e.timezone!=null&&Object.keys(i).filter(t=>t.includes(G)).forEach(t=>{i[t]=e.timezone})},countImport:function(e){return e.timezone!=null?1:0}}};function ka(e,i,t,r,a,n){const o=w("FormKit");return p(),L(o,{type:"select",name:e.formKey("timezone"),label:"Timezone",validation:"required","validation-behavior":"live",options:e.timezones(),help:"select timezone"},null,8,["name","options"])}var de=F(wa,[["render",ka]]);const W="install_package",Ta={setup:()=>{const e=m.uid();return{uid:e,formKey:i=>m.getFormKey(W,i,e)}},methods:{encodeToInstallation:function(e,i){Object.keys(i).filter(t=>t.includes(W)).forEach(t=>{i[t]&&(e.combustion+=`
zypper --non-interactive install `+m.normalizeZypperPackages(i[t]))})},encodeToExport:function(e,i){Object.keys(i).filter(t=>t.includes(W)).forEach(t=>{e.package===void 0&&(e.package={}),e.package.install===void 0&&(e.package.install=[]),e.package.install.push(i[t])})},fillImport:function(e,i){e.package==null||e.package.install==null||Object.keys(i).filter(t=>t.includes(W)).forEach(t=>{i[t]=e.package.install.shift()})},countImport:function(e){return e.package!=null&&e.package.install!=null?e.package.install.length:0}}};function xa(e,i,t,r,a,n){const o=w("FormKit");return p(),L(o,{name:e.formKey("package_name"),label:"Packages you want to install (space or comma separated)",type:"text",validation:"required","validation-behavior":"live",value:"vim-small",help:"This will add a 'zypper --non-interactive install [packages]' line to the combustion script."},null,8,["name"])}var ue=F(Ta,[["render",xa]]);const J="comb_raw",Fa={setup:()=>{const e=m.uid();return{uid:e,formKey:i=>m.getFormKey(J,i,e)}},methods:{encodeToInstallation:function(e,i){Object.keys(i).filter(t=>t.includes(J)).forEach(t=>{i[t]!=null&&(e.combustion+=`
`+i[t])})},encodeToExport:function(e,i){Object.keys(i).filter(t=>t.includes(J)).forEach(t=>{e.scripts===void 0&&(e.scripts=[]),i[t]!=null&&e.scripts.push(i[t])})},fillImport:function(e,i){e.scripts!=null&&Object.keys(i).filter(t=>t.includes(J)).forEach(t=>{i[t]=e.scripts.shift()})},countImport:function(e){return e.scripts!=null?e.scripts.length:0}}},$a={class:"combustionraw"};function Sa(e,i,t,r,a,n){const o=w("FormKit");return p(),f("div",$a,[l(o,{name:e.formKey("script_content"),label:"Lines to add",type:"textarea",validation:"required","validation-behavior":"live",value:'echo "hello combustion"',help:"You can find examples of a combustion script here: https://en.opensuse.org/Portal:MicroOS/Combustion#Simple_example"},null,8,["name"])])}var me=F(Fa,[["render",Sa]]);const Y="fr24",Ea={setup:()=>{const e=m.uid();return{do_initial_registration:y(!1),formKey:t=>m.getFormKey(Y,t,e)}},methods:{encodeToInstallation:function(e,i){Object.keys(i).filter(t=>t.includes(Y)).forEach(t=>{i[t]!=null&&(e.combustion+="echo '"+t.split("_").slice(0,-1).join("_").toUpperCase()+"="+i[t]+`' >> /etc/fr24feeder.env
`)})},encodeToExport:function(e,i){e.fr24_data={},Object.keys(i).filter(t=>t.includes(Y)).forEach(t=>{e.fr24_data[t.split("_").slice(0,-1).join("_")]=i[t]})},fillImport:function(e,i){e.fr24_data!=null&&Object.keys(i).filter(t=>t.includes(Y)).forEach(t=>{i[t]=e.fr24_data[t.split("_").slice(0,-1).join("_")]})},countImport:function(e){return e.fr24_data!=null?1:0}}},Pa={class:"flighradar24"},Ka={key:0},Ia={class:"container-fluid"},Ca={class:"row"},Ma=s("div",{class:"col-1"},null,-1),Va={class:"col-12"};function Ba(e,i,t,r,a,n){const o=w("FormKit");return p(),f("div",Pa,[l(o,{name:e.formKey("key"),label:"Flightradar24 sharing key (if you have one)",validation:[["matches",/^[a-fA-F0-9]{16}$/]],"validation-messages":{matches:"Invalid key format"},"validation-behavior":"live",value:"",placeholder:"e.g. 4bd8df99c89e12e2",help:"If you already configured Flightradar24 before, you can use the sharing key here. Otherwise you would need to do the initial registration (see below)"},null,8,["name"]),l(o,{name:e.formKey("do_initial_registration"),label:"I don't have a key",type:"checkbox","validation-behavior":"live",modelValue:e.do_initial_registration,"onUpdate:modelValue":i[0]||(i[0]=d=>e.do_initial_registration=d)},null,8,["name","modelValue"]),e.do_initial_registration===!0?(p(),f("div",Ka,[s("div",Ia,[s("div",Ca,[Ma,s("div",Va,[l(o,{name:e.formKey("mail"),label:"Flightradar24 registration - Mail address",validation:"[['required']]","validation-behavior":"live",value:"",placeholder:"e.g. me@geeko.tld",help:`If you HAVEN'T configured Flightradar24 before, specify your e-mail address here.
        It will be used for corrispondence with FR24. If you have a flightradar24.com account already, it's a good idea to use the same e-mail address, as that will allow your account to be upgraded automatically to a Business subscription. Flightradar24 will get the latitude, longitude and altitude details of your antenna.`},null,8,["name"])])])])])):b("",!0)])}var pe=F(Ea,[["render",Ba]]);const X="antenna",Ua={setup:()=>{const e=m.uid();return{do_initial_registration:y(!1),formKey:t=>m.getFormKey(X,t,e)}},methods:{encodeToInstallation:function(e,i){e.combustion+=`
# Antenna details
cat > /etc/antenna.env <<EOF
`,Object.keys(i).filter(t=>t.includes(X)).forEach(t=>{i[t]!=null&&(e.combustion+=t.split("_").slice(0,-1).join("_").toUpperCase()+"="+i[t]+`
`)}),e.combustion+=`EOF
`},encodeToExport:function(e,i){e.antenna_details={},Object.keys(i).filter(t=>t.includes(X)).forEach(t=>{e.antenna_details[t.split("_").slice(0,-1).join("_")]=i[t]})},fillImport:function(e,i){e.antenna_details!=null&&Object.keys(i).filter(t=>t.includes(X)).forEach(t=>{i[t]=e.antenna_details[t.split("_").slice(0,-1).join("_")]})},countImport:function(e){return e.antenna_details!=null?1:0}}},Oa={class:"antenna"};function Na(e,i,t,r,a,n){const o=w("FormKit");return p(),f("div",Oa,[l(o,{name:e.formKey("lat"),label:"Latitude of your antenna",validation:[["matches",/^\-?\d\d?\.\d\d\d\d$/]],"validation-messages":{matches:"Latitude format is DD.DDDD"},"validation-behavior":"live",value:"",placeholder:"format DD.DDDD",help:"Specify your antenna latitude here. It will be shared with Flightradar24 and with MLAT servers if you choose to feed those. It will *NOT* be shared when doing Beast ADS-B data sharing."},null,8,["name","validation","validation-messages"]),l(o,{name:e.formKey("long"),label:"Longitude of your antenna",validation:[["matches",/^\-?\d\d?\d?\.\d\d\d\d$/]],"validation-messages":{matches:"Longitude format is DDD.DDDD"},"validation-behavior":"live",value:"",placeholder:"format DDD.DDDD",help:"Specify your antenna longitude here. It will be shared with Flightradar24 and with MLAT servers if you choose to feed those. It will *NOT* be shared when doing Beast ADS-B data sharing."},null,8,["name","validation","validation-messages"]),l(o,{name:e.formKey("alt"),label:"Altitude of your antenna",validation:[["matches",/^\d\d?\d?$/]],"validation-messages":{matches:"Altitude format is DDD"},"validation-behavior":"live",value:"",placeholder:"altitude over sea level (in feet). format DDD",help:"Specify your antenna altitude over sea level (in feet) here. It will be shared with Flightradar24 and with MLAT servers if you choose to feed those. It will *NOT* be shared when doing Beast ADS-B data sharing."},null,8,["name"])])}var ke=F(Ua,[["render",Na]]);const Z="beast",za={setup:()=>{const e=m.uid(),i=y(!1),t=y(!1),r=y(!1),a=y(!1),n=y(!1),o=y(!1);return{feed_airplanes_live:i,feed_adsbexchange:t,feed_adsb_fi:r,feed_adsb_lol:a,feed_planespotters:n,feed_flyitalyadsb:o,formKey:d=>m.getFormKey(Z,d,e)}},methods:{encodeToInstallation:function(e,i){e.combustion+=`
# Beast sharing details
cat > /etc/dumper.env <<EOF
`,Object.keys(i).filter(t=>t.includes(Z)).forEach(t=>{i[t]!=null&&(e.combustion+=t.split("_").slice(0,-1).join("_").toUpperCase()+"="+i[t]+`
`)}),e.combustion+=`EOF
`},encodeToExport:function(e,i){e.beast_enabled={},Object.keys(i).filter(t=>t.includes(Z)).forEach(t=>{e.beast_enabled[t.split("_").slice(0,-1).join("_")]=i[t]})},fillImport:function(e,i){e.beast_enabled!=null&&Object.keys(i).filter(t=>t.includes(Z)).forEach(t=>{i[t]=e.beast_enabled[t.split("_").slice(0,-1).join("_")]})},countImport:function(e){return e.beast_enabled!=null?1:0}}},Da={class:"beast"},Ra=s("hr",{class:"divider-long"},null,-1);function La(e,i,t,r,a,n){const o=w("FormKit");return p(),f("div",Da,[l(o,{name:e.formKey("feed_airplanes_live"),label:"Feed ADS-B data to airplanes.live (Non-profit service)",type:"checkbox","validation-behavior":"live"},null,8,["name"]),l(o,{name:e.formKey("feed_adsb_fi"),label:"Feed ADS-B data to adsb.fi (Non-profit service)",type:"checkbox","validation-behavior":"live"},null,8,["name"]),l(o,{name:e.formKey("feed_adsb_lol"),label:"Feed ADS-B data to adsb.lol (Non-profit service)",type:"checkbox","validation-behavior":"live"},null,8,["name"]),l(o,{name:e.formKey("feed_planespotters"),label:"Feed ADS-B data to planespotters.net (Non-profit service)",type:"checkbox","validation-behavior":"live"},null,8,["name"]),l(o,{name:e.formKey("feed_flyitalyadsb"),label:"Feed ADS-B data to FlyItalyADSB (Non-profit service)",type:"checkbox","validation-behavior":"live"},null,8,["name"]),Ra,l(o,{name:e.formKey("feed_adsbexchange"),label:"Feed ADS-B data to ADSBExchange (For-profit service)",type:"checkbox","validation-behavior":"live"},null,8,["name"])])}var fe=F(za,[["render",La]]);const qa={class:"page-section p-2 bg-dark",id:"edit"},Ha={class:"container mt-5 px-0"},Ga=Q('<div class="row gx-4 gx-lg-5 justify-content-center"><div class="col-lg-8 col-xl-6 text-white text-center"><h1 class="mt-5">ADS-B MicroOS Config Generator</h1><div class="d-grid mb-5"><p style="font-size:100px;">\u{1F6EB}</p></div></div></div><div class="row gx-4 gx-lg-5 justify-content-center"><div class="col-lg-8 col-xl-6 text-white text-right"> This web app allows you to configure a simple ADS-B receiver based on openSUSE MicroOS and openSUSE Tumbleweed-based containers.<br><br><a href="https://github.com/wiedehopf/tar1090">tar1090</a> is the built-in web interface.<br><br> If you wish so, you can also set-up feeding to some non-profit and for-profit aggregators, including Flightradar24.<br><br> This has been only tested with a Raspberry Pi 3 Model B so far.<br><br> What is needed:<br><br><ul><li>One RTL-SDR capable ADS-B receiver (RTL2832U DVB-T dongles might work)</li><li>One Raspberry Pi or other SBC supported by openSUSE MicroOS</li><li>One microSD card where to install openSUSE MicroOS</li><li>One USB drive to use for the initial ignition+combustion bootstrap</li><li>Working, wired internet connection</li></ul> To start, generate a configuration from this page, convert the configuration to an image by pressing the &#39;Convert and Download&#39; button and flash it in an USB drive.<br><br> Then, flash the <a href="https://download.opensuse.org/ports/aarch64/tumbleweed/appliances/openSUSE-MicroOS.aarch64-ContainerHost-RaspberryPi.raw.xz">RaspberryPi MicroOS Base System + Container Runtime Environment image</a> in a microSD.<br><br> Plug the USB drive, the RTL-SDR capable ADS-B receiver (if possible) and the MicroOS microSD in the Raspberry Pi. Ensure to connect the Raspbery Pi to the internet using a wired cable.<br><br> If you weren&#39;t able to plug the ADS-B receiver during the initial bootstrap (due to the small space available), once Cockpit is up, unplug the USB drive and plug the receiver instead. Then reboot, and everything should now be properly set-up.<br><br> Start the Pi, and wait ~15 minutes. If everything went right, you will be able to access the tar1090 interface at port :8080 and the Cockpit administration interface at port :9090.<br><br> This interface is based on <a href="https://opensuse.github.io/fuel-ignition/">Fuel Ignition</a> web app. <hr class="divider-long"></div></div>',2),Wa={class:"row gx-4 gx-lg-5 justify-content-center mb-5"},Ja={class:"col-lg-6"},Ya={class:"form-floating mb-3"},Xa=s("hr",{class:"divider-long"},null,-1),Za=s("hr",{class:"divider-long"},null,-1),Qa=s("hr",{class:"divider-long"},null,-1),ja={style:{width:"100% !important"},class:"text-white"},en=s("h4",null,"Antenna details",-1),tn=s("hr",{class:"divider-long"},null,-1),an=s("hr",{class:"divider-long"},null,-1),nn=s("hr",{class:"divider-long"},null,-1),on=s("hr",{class:"divider-long"},null,-1),rn={key:0},sn={class:"page-section p-2",id:"export"},ln={class:"container mt-5 px-0"},cn={class:"row gx-4 gx-lg-5 justify-content-center"},dn={class:"col-lg-8 col-xl-6"},un=s("h1",{class:"mt-5 text-center"},"config.ign",-1),mn={class:"d-grid mb-5"},pn={class:"form-data"},fn={class:"double"},_n=$(" Copy "),hn=s("svg",{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",fill:"currentColor",class:"bi bi-clipboard",viewBox:"0 0 16 16"},[s("path",{d:"M4 1.5H3a2 2 0 0 0-2 2V14a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-1v1h1a1 1 0 0 1 1 1V14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V3.5a1 1 0 0 1 1-1h1v-1z"}),s("path",{d:"M9.5 1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-1a.5.5 0 0 1 .5-.5h3zm-3-1A1.5 1.5 0 0 0 5 1.5v1A1.5 1.5 0 0 0 6.5 4h3A1.5 1.5 0 0 0 11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3z"})],-1),gn=[_n,hn],vn={key:0},yn=s("h1",{class:"mt-5 text-center"},"combustion script",-1),bn=s("hr",{class:"divider"},null,-1),An={class:"d-grid mb-5"},wn={class:"form-data"},kn=s("hr",{class:"divider"},null,-1),Tn={class:"mt-5 text-center"},xn=$(" Convert to Ignition-"),Fn={key:0},$n=$("Ready Filesystem IMG in the Browser "),Sn=Q(`<div><h2 class="mt-5 text-center"> Convert to ISO Filesystem with mkisofs </h2><pre class="form-data">  Using ignition file only:
  # mkisofs -full-iso9660-filenames -o ignition.iso -V ignition -root ignition config.ign

  Using ignition and combustion configuration files:
  The files has to be stored under
   - fuel-ignition/combustion/script
   - fuel-ignition/ignition/config.ign
  # mkisofs -full-iso9660-filenames -o ignition.iso -V ignition fuel-ignition </pre><p> How to use the generated data with <a href="https://documentation.suse.com/sle-micro/6.0/html/Micro-deployment-raw-images/index.html#deployment-configuring-with-ignition" target="_blank">ignition</a> and <a href="https://documentation.suse.com/sle-micro/6.0/html/Micro-deployment-raw-images/index.html#deployment-configuring-with-combustion" target="_blank">combustion</a> . </p><hr class="divider"></div><h2 class="mt-5 text-center">Load Settings from</h2>`,2),En=s("h2",{class:"mt-5 text-center"},"Save Settings to",-1),Te={setup(e){const i=[ee,te,ae,ne,oa,ie,oe,re,ce,de,ue,me,pe,ke,fe,le,we],t=y({debug:!1,save_to:"adsbreceiver.json"}),r=y({});i.forEach(g=>m.setupFormComponentWatcher(g,Ce,t));let a=y(0);const n=()=>{a.value+=1},o=g=>g.methods.hasOwnProperty("countImport")?g.methods.countImport(r.value):0;Me(()=>{Object.keys(r.value).length>0&&(i.filter(g=>g.methods.hasOwnProperty("fillImport")).forEach(g=>g.methods.fillImport(r.value,t.value)),r.value={})});const d=g=>{console.log("downloading.."),m.saveTemplateAsFile("config.ign",h(g))},c=g=>{m.copy(JSON.stringify(h(g),null,2))},h=g=>{let u={ignition:{version:"3.2.0"}};return i.filter(v=>v.methods.hasOwnProperty("encodeToInstallation")).forEach(v=>v.methods.encodeToInstallation(u,g)),g.debug&&(u["debug:form"]=g),u.combustion=void 0,u.combustion_initrd_and_running_system=void 0,u.combustion_initrd=void 0,u},_=g=>{let u={combustion:"",combustion_initrd:"",combustion_initrd_and_running_system:"",output:""};return i.filter(v=>v.methods.hasOwnProperty("encodeToInstallation")).forEach(v=>v.methods.encodeToInstallation(u,g)),u.combustion_initrd_and_running_system!=""||u.combustion_initrd!=""?(u.output==""&&(u.output=`#!/bin/bash
# combustion: network prepare
# script generated with https://opensuse.github.io/fuel-ignition/

`),u.combustion_initrd_and_running_system!=""&&(console.log("initrd and running system: "+u.combustion_initrd_and_running_system),u.output+=u.combustion_initrd_and_running_system+`
`),u.output+='if [ "${1-}" = "--prepare" ]; then\n',u.combustion_initrd!=""&&(console.log("initrd: "+u.combustion_initrd),u.output+=u.combustion_initrd+`
`),u.output+=`  exit 0
fi
`):u.output=`#!/bin/bash
# combustion: network
# script generated with https://opensuse.github.io/fuel-ignition/
`,u.output+=`
# Redirect output to the console
exec > >(exec tee -a /dev/tty0) 2>&1
`,u.combustion="",u.combustion_initrd_and_running_system="",u.combustion_initrd="",i.filter(v=>v.methods.hasOwnProperty("encodeToInstallation")).forEach(v=>v.methods.encodeToInstallation(u,g)),u.combustion!==""&&(console.log(u.combustion),u.output+=u.combustion),u.output+=`zypper --non-interactive --gpg-auto-import-keys ar --refresh --check https://download.opensuse.org/repositories/home:/epaolantonio:/adsbreceiver/openSUSE_Tumbleweed/home:epaolantonio:adsbreceiver.repo
`,u.output+=`zypper --non-interactive --gpg-auto-import-keys refresh
zypper --non-interactive install adsbreceiver
`,u.output+=`systemctl enable cockpit.socket
`,u.output+=`systemctl enable chrony-wait.service
`,u.output+=`setsebool -P container_use_devices=true
`,u.output+=`echo "MACHINE_UUID=$(uuidgen -r)" > /etc/adsbreceiver-uuid
`,u.output+=`
# Leave a marker
echo "Configured with combustion" > /etc/issue.d/combustion`,u.output+=`

# Close outputs and wait for tee to finish.
exec 1>&- 2>&-; wait;`,u.output};async function A(g){let u=g.target.files[0];r.value=await m.parseJsonFile(u).catch(v=>{alert(v),m.clearFile()}),t.value={debug:t.value.debug,save_to:t.value.save_to},n()}const T=g=>{let u={};i.filter(v=>v.methods.hasOwnProperty("encodeToExport")).forEach(v=>v.methods.encodeToExport(u,g)),m.saveTemplateAsFile(g.save_to,u,!1)};return(g,u)=>{const v=w("FormKit");return p(),f("div",{key:R(a)},[s("section",qa,[s("div",Ha,[Ga,s("div",Wa,[s("div",Ja,[s("div",Ya,[l(v,{type:"group",modelValue:t.value,"onUpdate:modelValue":u[0]||(u[0]=x=>t.value=x)},{default:k(()=>[l(S,{title:"Add User",displaysAtBegin:o(ee)},{default:k(({index:x})=>[l(ee,{index:x},null,8,["index"])]),_:1},8,["displaysAtBegin"]),l(S,{title:"Set Hostname",displaysAtBegin:o(ae),maxComponents:1},{default:k(()=>[l(ae)]),_:1},8,["displaysAtBegin"]),Xa,l(S,{title:"Set Language",displaysAtBegin:o(ne),maxComponents:1},{default:k(()=>[l(ne)]),_:1},8,["displaysAtBegin"]),l(S,{title:"Set Keyboard",displaysAtBegin:o(ce),maxComponents:1},{default:k(()=>[l(ce)]),_:1},8,["displaysAtBegin"]),l(S,{title:"Set Timezone",displaysAtBegin:o(de),maxComponents:1},{default:k(()=>[l(de)]),_:1},8,["displaysAtBegin"]),Za,l(S,{title:"Add Network Interface",displaysAtBegin:o(ie)},{default:k(()=>[l(ie)]),_:1},8,["displaysAtBegin"]),Qa,s("div",ja,[en,s("div",null,[l(ke)])]),tn,l(S,{title:"Feed ADS-B data to Beast-compatible aggregators",displaysAtBegin:o(fe),maxComponents:1},{default:k(()=>[l(fe)]),_:1},8,["displaysAtBegin"]),an,l(S,{title:"Enable Flightradar24 data sharing (for-profit service)",displaysAtBegin:o(pe),maxComponents:1},{default:k(()=>[l(pe)]),_:1},8,["displaysAtBegin"]),nn,l(S,{title:"Enable or Create Service",displaysAtBegin:o(oe)},{default:k(()=>[l(oe)]),_:1},8,["displaysAtBegin"]),l(S,{title:"Modify Existing Service",displaysAtBegin:o(re)},{default:k(()=>[l(re)]),_:1},8,["displaysAtBegin"]),on,l(S,{title:"Install Additional Packages",displaysAtBegin:o(ue)},{default:k(()=>[l(ue)]),_:1},8,["displaysAtBegin"]),l(S,{title:"Add Files To System",displaysAtBegin:o(te)},{default:k(()=>[l(te)]),_:1},8,["displaysAtBegin"]),l(S,{title:"Add Custom Lines To Combustion Script",displaysAtBegin:o(me)},{default:k(()=>[l(me)]),_:1},8,["displaysAtBegin"]),t.value.debug?(p(),f("div",rn,[l(S,{title:"DEBUG: Add Bytes",displaysAtBegin:o(le)},{default:k(()=>[l(le)]),_:1},8,["displaysAtBegin"]),l(S,{title:"DEBUG: Analyze File",displaysAtBegin:1,maxComponents:1},{default:k(()=>[l(we)]),_:1})])):b("",!0)]),_:1},8,["modelValue"])])])])])]),s("section",sn,[s("div",ln,[s("div",cn,[s("div",dn,[un,s("div",mn,[s("pre",pn,N(h(t.value)),1),s("div",fn,[l(v,{modelValue:t.value.debug,"onUpdate:modelValue":u[1]||(u[1]=x=>t.value.debug=x),type:"checkbox",label:"Debug",name:"debug"},null,8,["modelValue"]),s("button",{class:"btn btn-outline-secondary mb-2",onClick:u[2]||(u[2]=x=>c(t.value))},gn)]),s("button",{class:"btn btn-primary mb-4",onClick:u[3]||(u[3]=x=>d(t.value)),"data-testid":"download_ignition"}," Download "),_(t.value)!==void 0?(p(),f("div",vn,[yn,bn,s("div",An,[s("pre",wn,N(_(t.value)),1),s("button",{class:"btn btn-primary mb-4","data-testid":"download_combustion",onClick:u[4]||(u[4]=x=>R(m).saveTemplateAsFile("script",_(t.value),!0))}," Download ")])])):b("",!0),s("div",null,[kn,s("h2",Tn,[xn,_(t.value)!==void 0?(p(),f("span",Fn,"Combustion-")):b("",!0),$n]),l(ve,{ignJson:h(t.value),combustionScript:_(t.value)},null,8,["ignJson","combustionScript"])]),Sn,l(v,{name:"load_from",type:"file",onChange:A}),En,l(v,{modelValue:t.value.save_to,"onUpdate:modelValue":u[5]||(u[5]=x=>t.value.save_to=x),type:"text",name:"save_to"},null,8,["modelValue"]),s("button",{class:"btn btn-primary mt-3",onClick:u[6]||(u[6]=x=>T(t.value))}," Save ")])])])])])])}}},Pn={class:"bg-light py-5"},Kn={class:"container px-4 px-lg-5"},In={class:"small text-center text-muted"},Cn=s("br",null,null,-1),Mn=s("br",null,null,-1),Vn=$(" This is a SUSE Hack Week 24 project by "),Bn=s("a",{href:"https://github.com/g7"},"Eugenio Paolantonio",-1),Un=$(". It is in no way related or sponsored to SUSE LLC or the openSUSE project."),On=s("br",null,null,-1),Nn=s("br",null,null,-1),zn=$(" Heavily based on the awesome "),Dn=s("a",{href:"https://opensuse.github.io/fuel-ignition/"},"Fuel Ignition",-1),Rn=$(" web app "),Ln={setup(e){return(i,t)=>(p(),f(P,null,[l(We),l(Te),s("footer",Pn,[s("div",Kn,[s("div",In,[$(" Copyright \xA9 "+N(new Date().getFullYear())+" \u2013 built with \u{1F49A}, Vue, and openSUSE",1),Cn,Mn,Vn,Bn,Un,On,Nn,zn,Dn,Rn])])])],64))}},qn={},Hn={class:"masthead"},Gn={class:"container px-4 px-lg-5 h-75"},Wn={class:"row gx-4 gx-lg-5 h-100 align-items-center justify-content-center text-center"},Jn=s("div",{class:"col-lg-8 align-self-end"},[s("h1",{class:"text-white font-weight-bold"},[$(" Ignition & Combustion "),s("br"),$("Config Generator ")]),s("hr",{class:"divider"})],-1),Yn={class:"col-lg-8 align-self-baseline"},Xn=s("p",{class:"text-white-75 mb-5"},[$(" Easily generate new or edit existing Ignition configs. "),s("br"),$("No more fiddling around with JSON or Butane. ")],-1),Zn={class:"container-fluid"},Qn={class:"row"},jn={class:"col-xs-6 mb-3"},ei=$("Create New Config"),ti={class:"col-xs-6"},ai=$("JSON to Ignition IMG");function ni(e,i){const t=w("router-link");return p(),f("header",Hn,[s("div",Gn,[s("div",Wn,[Jn,s("div",Yn,[Xn,s("div",Zn,[s("div",Qn,[s("div",jn,[l(t,{class:"btn btn-primary btn-xl",to:"/edit"},{default:k(()=>[ei]),_:1})]),s("div",ti,[l(t,{class:"btn btn-primary btn-xl",to:"/convert"},{default:k(()=>[ai]),_:1})])])])])])])])}var ii=F(qn,[["render",ni]]),oi="/adsbreceiver/assets/undraw_convert_re_l0y1.2c99c673.svg";const ri={class:"page-section p-2 bg-dark",id:"edit"},si={class:"container mt-5 px-0"},li=s("div",{class:"row gx-4 gx-lg-5 justify-content-center"},[s("div",{class:"col-lg-8 col-xl-6 text-white text-center"},[s("h1",{class:"mt-5"},"Convert JSON to Ignition-Ready IMG"),s("hr",{class:"divider"}),s("div",{class:"d-grid mb-5"},[s("img",{class:"text-center mx-auto w-25",src:oi})])])],-1),ci={class:"row gx-4 gx-lg-5 justify-content-center mb-5"},di={class:"col-lg-6 expandable-comp text-white"},ui={class:"form-floating mb-3"},mi=s("p",null,null,-1),pi=s("hr",{class:"divider"},null,-1),fi={class:"page-section p-2",id:"export"},_i={class:"container mt-5 px-0"},hi={class:"row gx-4 gx-lg-5 justify-content-center"},gi={class:"col-lg-8 col-xl-6"},vi=s("h1",{class:"mt-5 text-center"},"JSON That Will Be Converted",-1),yi=s("hr",{class:"divider"},null,-1),bi={class:"d-grid mb-5"},Ai={class:"form-data"},wi={setup(e){const i=y({}),t="The provided json is invalid.";let r=y({});function a(){return r}async function n(d){let c=d.target.files[0];c!==void 0&&await m.parseJsonFile(c).catch(h=>{alert(h),m.clearFile()}).then(h=>(r=h,i.value.convert_text=JSON.stringify(r,null,2),h))}const o=function(d){if(i.value.convert_file!==void 0){if(console.log("convert file defined"),!confirm("You already uploaded a file. Discard?")){i.value.convert_text=JSON.stringify(r,null,2);return}m.clearFile();try{r=JSON.parse(i.value.convert_text)}catch{alert(t)}}};return(d,c)=>{const h=w("FormKit");return p(),f(P,null,[s("section",ri,[s("div",si,[li,s("div",ci,[s("div",di,[l(h,{type:"group",modelValue:i.value,"onUpdate:modelValue":c[0]||(c[0]=_=>i.value=_)},{default:k(()=>[s("div",ui,[l(h,{name:"convert_file",label:"Either  -  Config.ign / Json File To Convert",type:"file",onChange:n}),mi,l(h,{name:"convert_text",label:"Or  -  JSON as Text",placeholder:'e.g. { "ignition": { "version": "3.2.0" } }',type:"textarea",id:"convert_text","validation-behavior":"live",onKeyup:o})])]),_:1},8,["modelValue"]),l(ve,{ignJson:a()},null,8,["ignJson"])])])]),pi]),s("section",fi,[s("div",_i,[s("div",hi,[s("div",gi,[vi,yi,s("div",bi,[s("pre",Ai,N(a()),1)])])])])])],64)}}};var xe="/adsbreceiver/assets/undraw_freelancer_re_irh4.f098216d.svg";const ki={},Ti={class:"page-section bg-dark",id:"import"},xi={class:"container px-4 px-lg-5"},Fi={class:"row gx-4 gx-lg-5 justify-content-center"},$i=s("div",{class:"d-grid"},[s("img",{class:"text-center mx-auto",src:xe})],-1),Si={class:"col-lg-8 col-xl-6 text-white text-center"},Ei=s("h2",{class:"mt-2"},"Sorry, this is not implemented yet!",-1),Pi=s("hr",{class:"divider"},null,-1),Ki=s("p",{class:"mb-5"}," For now, Fuel Ignition can only create new configs. ",-1),Ii=$("Back Home");function Ci(e,i){const t=w("router-link");return p(),f("section",Ti,[s("div",xi,[s("div",Fi,[$i,s("div",Si,[Ei,Pi,Ki,l(t,{class:"btn btn-primary btn-xl",to:"/"},{default:k(()=>[Ii]),_:1})])])])])}var Mi=F(ki,[["render",Ci]]);const Vi=s("section",{class:"page-section bg-dark",id:"contact"},[s("div",{class:"container px-4 px-lg-5"},[s("div",{class:"row gx-4 gx-lg-5 justify-content-center"},[s("div",{class:"d-grid"},[s("img",{class:"text-center mx-auto",src:xe})])])])],-1),Bi=s("section",{class:"page-section p-2",id:"export"},[s("div",{class:"container mt-5 px-0"},[s("div",{class:"row gx-4 gx-lg-5 justify-content-center"},[s("h2",{class:"mt-5 text-center"},"Convert to ISO in the Browser (Alpha)"),s("hr",{class:"divider"}),s("div",{class:"d-grid mb-5"},[s("div",{class:"mx-auto"})])])])],-1),Ui={setup(e){return(i,t)=>(p(),f(P,null,[Vi,Bi],64))}},Oi="/adsbreceiver/",Ni=[{path:"/",name:"Home",component:ii},{path:"/edit",name:"Edit",component:Te},{path:"/import",name:"Import",component:Mi},{path:"/convert",name:"Convert",component:wi},{path:"/test",name:"Test",component:Ui}],zi=Ve({history:Be(Oi),routes:Ni});window.addEventListener("DOMContentLoaded",e=>{var i=function(){const a=document.body.querySelector("#mainNav");!a||(window.scrollY===0?a.classList.remove("navbar-shrink"):a.classList.add("navbar-shrink"))};i(),document.addEventListener("scroll",i);const t=document.body.querySelector(".navbar-toggler");[].slice.call(document.querySelectorAll("#navbarResponsive .nav-link")).map(function(a){a.addEventListener("click",()=>{window.getComputedStyle(t).display!=="none"&&t.click()})})});Ue(Ln).use(Oe,Ne).use(zi).mount("#app");
